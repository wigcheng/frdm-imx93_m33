<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MCIMX93-EVK" name="MCIMX93-EVK" brief="This is SDK version 24.12.00 manifest file. It describes the content of the MCIMX93-EVK and additional settings for tools that support SDK version 24.12.00" format_version="3.15" api_version="2.0.0" configuration="1e7d6ae8e82399f95b248b57c50a7d89" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.15.xsd">
  <!--Timestamp (UTC): 2025-01-16 00:51:59.096510-->
  <!--This manifest is generated based on sdk repo commit: TODO-->
  <externalDefinitions>
    <definition extID="mcimx93autoevk"/>
    <definition extID="com.crt.advproject.config.exe.debug"/>
    <definition extID="com.crt.advproject.config.exe.release"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso241200" name="MCUXpresso241200" version="24.12.00" revision="871 2025-01-14"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded_10-2021.10" version="13.2.1" full_name="GCC ARM Embedded 10-2021.10" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
  </toolchains>
  <boards>
    <board id="mcimx93evk" name="MCIMX93-EVK" version="1.0.0" package="MIMX9352DVVXM">
      <description>i.MX 93 Evaluation Kit</description>
      <image path="boards/mcimx93evk" type="image">
        <files mask="mcimx93evk.png"/>
      </image>
      <examples>
        <example id="mcimx93evk_lwip_ping_enet_qos_freertos_cm33" name="lwip_ping_enet_qos_freertos_cm33" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_ping_enet_qos/freertos">
          <external path="boards/mcimx93evk/lwip_examples/lwip_ping_enet_qos/freertos" type="xml">
            <files mask="lwip_ping_enet_qos_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_ping_enet_qos_bm_cm33" name="lwip_ping_enet_qos_bm_cm33" brief="The lwip_ping_enet_qos demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_ping_enet_qos/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_ping_enet_qos/bm" type="xml">
            <files mask="lwip_ping_enet_qos_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_ping_freertos_cm33" name="lwip_ping_freertos_cm33" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_ping/freertos">
          <external path="boards/mcimx93evk/lwip_examples/lwip_ping/freertos" type="xml">
            <files mask="lwip_ping_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_ping_bm_cm33" name="lwip_ping_bm_cm33" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_ping/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_ping/bm" type="xml">
            <files mask="lwip_ping_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_iperf_enet_qos_bm_cm33" name="lwip_iperf_enet_qos_bm_cm33" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https:/sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_iperf_enet_qos/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_iperf_enet_qos/bm" type="xml">
            <files mask="lwip_iperf_enet_qos_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_iperf_bm_cm33" name="lwip_iperf_bm_cm33" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https:/sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_iperf/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_iperf/bm" type="xml">
            <files mask="lwip_iperf_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_httpsrv_enet_qos_bm_cm33" name="lwip_httpsrv_enet_qos_bm_cm33" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_httpsrv_enet_qos/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_httpsrv_enet_qos/bm" type="xml">
            <files mask="lwip_httpsrv_enet_qos_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_httpsrv_bm_cm33" name="lwip_httpsrv_bm_cm33" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_httpsrv/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_httpsrv/bm" type="xml">
            <files mask="lwip_httpsrv_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_dhcp_enet_qos_freertos_cm33" name="lwip_dhcp_enet_qos_freertos_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_dhcp_enet_qos/freertos">
          <external path="boards/mcimx93evk/lwip_examples/lwip_dhcp_enet_qos/freertos" type="xml">
            <files mask="lwip_dhcp_enet_qos_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_dhcp_enet_qos_bm_cm33" name="lwip_dhcp_enet_qos_bm_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_dhcp_enet_qos/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_dhcp_enet_qos/bm" type="xml">
            <files mask="lwip_dhcp_enet_qos_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_dhcp_freertos_cm33" name="lwip_dhcp_freertos_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_dhcp/freertos">
          <external path="boards/mcimx93evk/lwip_examples/lwip_dhcp/freertos" type="xml">
            <files mask="lwip_dhcp_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lwip_dhcp_bm_cm33" name="lwip_dhcp_bm_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="boards/mcimx93evk/lwip_examples/lwip_dhcp/bm">
          <external path="boards/mcimx93evk/lwip_examples/lwip_dhcp/bm" type="xml">
            <files mask="lwip_dhcp_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_rpmsg_lite_str_echo_rtos_remote_core" name="rpmsg_lite_str_echo_rtos_remote_core" brief="The Multicore RPMsg-Lite string echo project is a simple demonstration program that uses the MCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system.&#10;It works with Linux RPMsg master peer to transfer string content back and forth. The name service handshake is performed first to create the communication channels. Next, Linux OS waits for user input to the RPMsg virtual tty. Anything which is received is sent to Cortex-M. Cortex-M displays what is received, and echoes back the same message as an acknowledgement. The tty reader on the Linux side can get the message, and start another transaction. The demo demonstrates RPMsg’s ability to send arbitrary content back and forth. Note - The maximum message length supported by RPMsg is 496 bytes. String longer than 496 will be divided by virtual tty into several messages.&#10;Shared memory usage&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc" compiler="compiler_gcc" category="multicore_examples" path="boards/mcimx93evk/multicore_examples/rpmsg_lite_str_echo_rtos/remote">
          <external path="boards/mcimx93evk/multicore_examples/rpmsg_lite_str_echo_rtos/remote" type="xml">
            <files mask="rpmsg_lite_str_echo_rtos_remote_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_rpmsg_lite_pingpong_rtos_remote_core" name="rpmsg_lite_pingpong_rtos_remote_core" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses the MCUXpresso SDK software, the RPMsg-Lite library and Linux rpmsg driver and shows how to implement the inter-core communication between cores of the multicore system. The Master core run on Linux OS(MPU), and the remote core run on MCU(MCU). After soc reset and Linux boot up, the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable by RL_BUFFER_COUNT and RL_BUFFER_PAYLOAD_SIZE in rpmsg_config.h. The shared memory region start address have to be defined in board.h or app.h. The size and start address must match with the config of DeviceTree of Linux." toolchain="armgcc" compiler="compiler_gcc" category="multicore_examples" path="boards/mcimx93evk/multicore_examples/rpmsg_lite_pingpong_rtos_linux/remote">
          <external path="boards/mcimx93evk/multicore_examples/rpmsg_lite_pingpong_rtos_linux/remote" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_remote_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_swtimer_cm33" name="freertos_swtimer_cm33" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/mcimx93evk/freertos_examples/freertos_swtimer">
          <external path="boards/mcimx93evk/freertos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_sem_static_cm33" name="freertos_sem_static_cm33" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/mcimx93evk/freertos_examples/freertos_sem_static">
          <external path="boards/mcimx93evk/freertos_examples/freertos_sem_static" type="xml">
            <files mask="freertos_sem_static_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_sem_cm33" name="freertos_sem_cm33" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two different tasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/mcimx93evk/freertos_examples/freertos_sem">
          <external path="boards/mcimx93evk/freertos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_queue_cm33" name="freertos_queue_cm33" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/mcimx93evk/freertos_examples/freertos_queue">
          <external path="boards/mcimx93evk/freertos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_mutex_cm33" name="freertos_mutex_cm33" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/mcimx93evk/freertos_examples/freertos_mutex">
          <external path="boards/mcimx93evk/freertos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_hello_cm33" name="freertos_hello_cm33" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and to provide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; message via debug console utility and suspend itself." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/mcimx93evk/freertos_examples/freertos_hello">
          <external path="boards/mcimx93evk/freertos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_generic_cm33" name="freertos_generic_cm33" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation from http://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of several tasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data to xQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number of received messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given from vApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/mcimx93evk/freertos_examples/freertos_generic">
          <external path="boards/mcimx93evk/freertos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_freertos_event_cm33" name="freertos_event_cm33" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/mcimx93evk/freertos_examples/freertos_event">
          <external path="boards/mcimx93evk/freertos_examples/freertos_event" type="xml">
            <files mask="freertos_event_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpuart_interrupt_transfer_cm33" name="cmsis_lpuart_interrupt_transfer_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="boards/mcimx93evk/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpuart_edma_transfer_cm33" name="cmsis_lpuart_edma_transfer_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="boards/mcimx93evk/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpspi_int_b2b_transfer_slave_cm33" name="cmsis_lpspi_int_b2b_transfer_slave_cm33" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="boards/mcimx93evk/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpspi_int_b2b_transfer_master_cm33" name="cmsis_lpspi_int_b2b_transfer_master_cm33" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="boards/mcimx93evk/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpi2c_int_b2b_transfer_slave_cm33" name="cmsis_lpi2c_int_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpi2c_int_b2b_transfer_master_cm33" name="cmsis_lpi2c_int_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpi2c_edma_b2b_transfer_slave_cm33" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_cmsis_lpi2c_edma_b2b_transfer_master_cm33" name="cmsis_lpi2c_edma_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/mcimx93evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_wdog32_cm33" name="wdog32_cm33" brief="The WDOG32 Example project is to demonstrate usage of the KSDK wdog32 driver.In this example, fast testing is first implemented to test the wdog32.After this, refreshing the watchdog in None-window mode and window mode is executed.Note wdog32 is disabled in SystemInit function which means wdog32 is disabledafter chip emerges from reset." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/wdog32" path="boards/mcimx93evk/driver_examples/wdog32">
          <external path="boards/mcimx93evk/driver_examples/wdog32" type="xml">
            <files mask="wdog32_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tstmr_cm33" name="tstmr_cm33" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tstmr" path="boards/mcimx93evk/driver_examples/tstmr">
          <external path="boards/mcimx93evk/driver_examples/tstmr" type="xml">
            <files mask="tstmr_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_trdc_cm33" name="trdc_cm33" brief="The trdc example shows how to control the memory block checker(MBC) and memory region checker(MRC) access policy using TRDC. In this example, a MRC memory region and a MBC memory block are set to unaccessible, then the hardfault occurs." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/trdc" path="boards/mcimx93evk/driver_examples/trdc">
          <external path="boards/mcimx93evk/driver_examples/trdc" type="xml">
            <files mask="trdc_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_timer_cm33" name="tpm_timer_cm33" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/timer">
          <external path="boards/mcimx93evk/driver_examples/tpm/timer" type="xml">
            <files mask="tpm_timer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_simple_pwm_cm33" name="tpm_simple_pwm_cm33" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/simple_pwm">
          <external path="boards/mcimx93evk/driver_examples/tpm/simple_pwm" type="xml">
            <files mask="tpm_simple_pwm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_pwm_twochannel_cm33" name="tpm_pwm_twochannel_cm33" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/pwm_twochannel">
          <external path="boards/mcimx93evk/driver_examples/tpm/pwm_twochannel" type="xml">
            <files mask="tpm_pwm_twochannel_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_output_compare_cm33" name="tpm_output_compare_cm33" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/output_compare">
          <external path="boards/mcimx93evk/driver_examples/tpm/output_compare" type="xml">
            <files mask="tpm_output_compare_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_input_capture_cm33" name="tpm_input_capture_cm33" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/input_capture">
          <external path="boards/mcimx93evk/driver_examples/tpm/input_capture" type="xml">
            <files mask="tpm_input_capture_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_dual_edge_capture_cm33" name="tpm_dual_edge_capture_cm33" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/dual_edge_capture">
          <external path="boards/mcimx93evk/driver_examples/tpm/dual_edge_capture" type="xml">
            <files mask="tpm_dual_edge_capture_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tpm_combine_pwm_cm33" name="tpm_combine_pwm_cm33" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tpm" path="boards/mcimx93evk/driver_examples/tpm/combine_pwm">
          <external path="boards/mcimx93evk/driver_examples/tpm/combine_pwm" type="xml">
            <files mask="tpm_combine_pwm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tmu_3_monitor_report_cm33" name="tmu_3_monitor_report_cm33" brief="The TMU example shows how to configure TMU register to monitor and report the temperature from one remote temperature measurement sites located on the chip.TMU has access to temperature measurement site strategically located on thechip. It monitors the site and can signal an alarm if a programmed threshold is everexceeded.Note: Before monitoring the temperature, we must programming the calibration table." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tmu" path="boards/mcimx93evk/driver_examples/tmu/tmu_monitor_report">
          <external path="boards/mcimx93evk/driver_examples/tmu/tmu_monitor_report" type="xml">
            <files mask="tmu_3_monitor_report_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_tmu_3_temperature_polling_cm33" name="tmu_3_temperature_polling_cm33" brief="The TMU example shows how to configure TMU register to monitor and report the temperature from multiple temperature measurement sites strategically located on the chip. It monitors these sites and outputs the immediate/average temperature." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tmu" path="boards/mcimx93evk/driver_examples/tmu/temperature_polling">
          <external path="boards/mcimx93evk/driver_examples/tmu/temperature_polling" type="xml">
            <files mask="tmu_3_temperature_polling_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_sai_interrupt_transfer_cm33" name="sai_interrupt_transfer_cm33" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sai" path="boards/mcimx93evk/driver_examples/sai/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_sai_interrupt_cm33" name="sai_interrupt_cm33" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sai" path="boards/mcimx93evk/driver_examples/sai/interrupt">
          <external path="boards/mcimx93evk/driver_examples/sai/interrupt" type="xml">
            <files mask="sai_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_sai_edma_transfer_cm33" name="sai_edma_transfer_cm33" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sai" path="boards/mcimx93evk/driver_examples/sai/edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/sai/edma_transfer" type="xml">
            <files mask="sai_edma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_rgpio_led_output_cm33" name="rgpio_led_output_cm33" brief="The RGPIO Example project is a demonstration program that uses the SDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/rgpio" path="boards/mcimx93evk/driver_examples/rgpio/led_output">
          <external path="boards/mcimx93evk/driver_examples/rgpio/led_output" type="xml">
            <files mask="rgpio_led_output_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_pdm_interrupt_cm33" name="pdm_interrupt_cm33" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="boards/mcimx93evk/driver_examples/pdm/pdm_interrupt">
          <external path="boards/mcimx93evk/driver_examples/pdm/pdm_interrupt" type="xml">
            <files mask="pdm_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_pdm_hwvad_cm33" name="pdm_hwvad_cm33" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="boards/mcimx93evk/driver_examples/pdm/pdm_hwvad">
          <external path="boards/mcimx93evk/driver_examples/pdm/pdm_hwvad" type="xml">
            <files mask="pdm_hwvad_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_pdm_edma_transfer_cm33" name="pdm_edma_transfer_cm33" brief="pdm_edma_transfer" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pdm" path="boards/mcimx93evk/driver_examples/pdm/pdm_edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/pdm/pdm_edma_transfer" type="xml">
            <files mask="pdm_edma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_polling_cm33" name="lpuart_polling_cm33" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/polling">
          <external path="boards/mcimx93evk/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_interrupt_transfer_cm33" name="lpuart_interrupt_transfer_cm33" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_interrupt_rb_transfer_cm33" name="lpuart_interrupt_rb_transfer_cm33" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/mcimx93evk/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_interrupt_cm33" name="lpuart_interrupt_cm33" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/interrupt">
          <external path="boards/mcimx93evk/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpuart_edma_transfer_cm33" name="lpuart_edma_transfer_cm33" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/mcimx93evk/driver_examples/lpuart/edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lptmr_cm33" name="lptmr_cm33" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lptmr" path="boards/mcimx93evk/driver_examples/lptmr">
          <external path="boards/mcimx93evk/driver_examples/lptmr" type="xml">
            <files mask="lptmr_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_polling_b2b_transfer_slave_cm33" name="lpspi_polling_b2b_transfer_slave_cm33" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/polling_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/lpspi/polling_b2b_transfer/slave" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_polling_b2b_transfer_master_cm33" name="lpspi_polling_b2b_transfer_master_cm33" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/polling_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/lpspi/polling_b2b_transfer/master" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_interrupt_b2b_transfer_slave_cm33" name="lpspi_interrupt_b2b_transfer_slave_cm33" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_interrupt_b2b_transfer_master_cm33" name="lpspi_interrupt_b2b_transfer_master_cm33" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_interrupt_b2b_slave_cm33" name="lpspi_interrupt_b2b_slave_cm33" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpspi_interrupt_b2b_master_cm33" name="lpspi_interrupt_b2b_master_cm33" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b/master">
          <external path="boards/mcimx93evk/driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpit_single_channel_cm33" name="lpit_single_channel_cm33" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpit" path="boards/mcimx93evk/driver_examples/lpit/single_channel">
          <external path="boards/mcimx93evk/driver_examples/lpit/single_channel" type="xml">
            <files mask="lpit_single_channel_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpit_chained_channel_cm33" name="lpit_chained_channel_cm33" brief="The LPIT chained channel project is a simple example of the SDK LPIT driver. It sets up the LPIT hardware block to trigger a periodic interrupt after every 1 second in the channel No.0, the channel No.1 chained with channel No.0, if LPIT contain more than two channels, the channel No.2 chained with channel No.1....the channel No.N chained with Channel No.N-1. When the LPIT interrupt is triggered." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpit" path="boards/mcimx93evk/driver_examples/lpit/chained_channel">
          <external path="boards/mcimx93evk/driver_examples/lpit/chained_channel" type="xml">
            <files mask="lpit_chained_channel_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_read_accel_value_transfer_cm33" name="lpi2c_read_accel_value_transfer_cm33" brief="The lpi2c_read_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/read_accel_value_transfer">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/read_accel_value_transfer" type="xml">
            <files mask="lpi2c_read_accel_value_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_polling_b2b_slave_cm33" name="lpi2c_polling_b2b_slave_cm33" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/polling_b2b/slave">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/polling_b2b/slave" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_polling_b2b_master_cm33" name="lpi2c_polling_b2b_master_cm33" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/polling_b2b/master">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/polling_b2b/master" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_interrupt_b2b_transfer_slave_cm33" name="lpi2c_interrupt_b2b_transfer_slave_cm33" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_interrupt_b2b_transfer_master_cm33" name="lpi2c_interrupt_b2b_transfer_master_cm33" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_edma_b2b_transfer_slave_cm33" name="lpi2c_edma_b2b_transfer_slave_cm33" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_lpi2c_edma_b2b_transfer_master_cm33" name="lpi2c_edma_b2b_transfer_master_cm33" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/mcimx93evk/driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_polling_b2b_transfer_slave_cm33" name="i3c_polling_b2b_transfer_slave_cm33" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/polling_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/i3c/polling_b2b_transfer/slave" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_polling_b2b_transfer_master_cm33" name="i3c_polling_b2b_transfer_master_cm33" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/polling_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/i3c/polling_b2b_transfer/master" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_master_read_sensor_lsm6dso_cm33" name="i3c_master_read_sensor_lsm6dso_cm33" brief="The i3c_master_read_sensor_lsm6dso example shows how to use i3c driver as master to communicate with sensor LSM6DSO." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/master_read_sensor_lsm6dso">
          <external path="boards/mcimx93evk/driver_examples/i3c/master_read_sensor_lsm6dso" type="xml">
            <files mask="i3c_master_read_sensor_lsm6dso_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_interrupt_b2b_transfer_slave_cm33" name="i3c_interrupt_b2b_transfer_slave_cm33" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/interrupt_b2b_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/i3c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_i3c_interrupt_b2b_transfer_master_cm33" name="i3c_interrupt_b2b_transfer_master_cm33" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/mcimx93evk/driver_examples/i3c/interrupt_b2b_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/i3c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexspi_nor_polling_transfer_cm33" name="flexspi_nor_polling_transfer_cm33" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexspi" path="boards/mcimx93evk/driver_examples/flexspi/nor/polling_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexspi/nor/polling_transfer" type="xml">
            <files mask="flexspi_nor_polling_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexspi_nor_edma_transfer_cm33" name="flexspi_nor_edma_transfer_cm33" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexspi" path="boards/mcimx93evk/driver_examples/flexspi/nor/edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexspi/nor/edma_transfer" type="xml">
            <files mask="flexspi_nor_edma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_uart_polling_transfer_cm33" name="flexio_uart_polling_transfer_cm33" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/uart/polling_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_uart_interrupt_transfer_cm33" name="flexio_uart_interrupt_transfer_cm33" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/uart/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_uart_int_rb_transfer_cm33" name="flexio_uart_int_rb_transfer_cm33" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/uart/int_rb_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexio/uart/int_rb_transfer" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_spi_int_lpspi_transfer_slave_cm33" name="flexio_spi_int_lpspi_transfer_slave_cm33" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/spi/int_lpspi_transfer/slave">
          <external path="boards/mcimx93evk/driver_examples/flexio/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_spi_int_lpspi_transfer_master_cm33" name="flexio_spi_int_lpspi_transfer_master_cm33" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/spi/int_lpspi_transfer/master">
          <external path="boards/mcimx93evk/driver_examples/flexio/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_pwm_cm33" name="flexio_pwm_cm33" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/pwm">
          <external path="boards/mcimx93evk/driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_pin_led_output_cm33" name="flexio_pin_led_output_cm33" brief="The FLEXIO led project is a demonstration program that uses the FELXIO software to manipulate the felxio-pin.The example is supported by the set, clear, and toggle write-only registers for each flexio output data register. The example take turns to shine the LED." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/pin/led_output">
          <external path="boards/mcimx93evk/driver_examples/flexio/pin/led_output" type="xml">
            <files mask="flexio_pin_led_output_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_i2c_read_accel_value_transfer_cm33" name="flexio_i2c_read_accel_value_transfer_cm33" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/i2c/read_accel_value_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexio/i2c/read_accel_value_transfer" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexio_i2c_interrupt_lpi2c_transfer_cm33" name="flexio_i2c_interrupt_lpi2c_transfer_cm33" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/mcimx93evk/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_ping_pong_buffer_transfer_cm33" name="flexcan_ping_pong_buffer_transfer_cm33" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/ping_pong_buffer_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/ping_pong_buffer_transfer" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_loopback_transfer_cm33" name="flexcan_loopback_transfer_cm33" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/loopback_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_loopback_edma_transfer_cm33" name="flexcan_loopback_edma_transfer_cm33" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/loopback_edma_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/loopback_edma_transfer" type="xml">
            <files mask="flexcan_loopback_edma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_loopback_cm33" name="flexcan_loopback_cm33" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/loopback">
          <external path="boards/mcimx93evk/driver_examples/flexcan/loopback" type="xml">
            <files mask="flexcan_loopback_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_interrupt_transfer_cm33" name="flexcan_interrupt_transfer_cm33" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_flexcan_efifo_interrupt_transfer_cm33" name="flexcan_efifo_interrupt_transfer_cm33" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/mcimx93evk/driver_examples/flexcan/efifo_interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/flexcan/efifo_interrupt_transfer" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_canfd_ping_pong_buffer_transfer_cm33" name="canfd_ping_pong_buffer_transfer_cm33" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/canfd" path="boards/mcimx93evk/driver_examples/canfd/ping_pong_buffer_transfer">
          <external path="boards/mcimx93evk/driver_examples/canfd/ping_pong_buffer_transfer" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_canfd_loopback_transfer_cm33" name="canfd_loopback_transfer_cm33" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/canfd" path="boards/mcimx93evk/driver_examples/canfd/loopback_transfer">
          <external path="boards/mcimx93evk/driver_examples/canfd/loopback_transfer" type="xml">
            <files mask="canfd_loopback_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_canfd_loopback_cm33" name="canfd_loopback_cm33" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/canfd" path="boards/mcimx93evk/driver_examples/canfd/loopback">
          <external path="boards/mcimx93evk/driver_examples/canfd/loopback" type="xml">
            <files mask="canfd_loopback_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_canfd_interrupt_transfer_cm33" name="canfd_interrupt_transfer_cm33" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/canfd" path="boards/mcimx93evk/driver_examples/canfd/interrupt_transfer">
          <external path="boards/mcimx93evk/driver_examples/canfd/interrupt_transfer" type="xml">
            <files mask="canfd_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_qos_txrx_ptp1588_transfer_cm33" name="enet_qos_txrx_ptp1588_transfer_cm33" brief="The example shows the way to use ENET QOS driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET_QOS.2. How to get the time stamp of the PTP 1588 timer.3. How to use Get the ENET_QOS transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/enet_qos" path="boards/mcimx93evk/driver_examples/enet_qos/txrx_ptp1588_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet_qos/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_qos_txrx_ptp1588_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_qos_txrx_multiring_transfer_cm33" name="enet_qos_txrx_multiring_transfer_cm33" brief="The example shows the way to use ENET QOS driver to receive and transmit frames supported multi-ring platforms. this example is only supported in multi-ring platform. 1. This example shows how to initialize the ENET MAC. 2. How to use ENET MAC to transmit frames in avb supported multiple-ring platforms. The example transmits 20 number frames. For simple demo, we create frames with some special definition. 1. Build transmission frames with broadcast mac address. 2. Build frames with unicast mac address 3. Send broadcast frames to ring 0 and unitcase frames to ring 1, then receive them back in associated rings." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/enet_qos" path="boards/mcimx93evk/driver_examples/enet_qos/txrx_multiring_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet_qos/txrx_multiring_transfer" type="xml">
            <files mask="enet_qos_txrx_multiring_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_txrx_transfer_cm33" name="enet_txrx_transfer_cm33" brief="The enet_rxtx example shows the simplest way to use ENET driver for simple frame receive and transmit.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.The example transmits 20 number broadcast frame, print the frame length, source MAC addressand destination MAC address when receive frame.Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. youcan change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/enet" path="boards/mcimx93evk/driver_examples/enet/txrx_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet/txrx_transfer" type="xml">
            <files mask="enet_txrx_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_txrx_ptp1588_transfer_cm33" name="enet_txrx_ptp1588_transfer_cm33" brief="The enet_rxtx_ptp1588 example shows the way to use ENET driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.3. How to add to the multicast group to receive PTP 1588 message.4. How to get the time stamp of the PTP 1588 timer.4. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received. Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. you can change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/enet" path="boards/mcimx93evk/driver_examples/enet/txrx_ptp1588_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_txrx_ptp1588_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_enet_txrx_multiring_transfer_cm33" name="enet_txrx_multiring_transfer_cm33" brief="The enet_txrx_multiring_transfer example shows the way to use ENET driver to   receive and transmit avb frame in the avb feature supported multi-ring platforms. this example is only supported in multi-ring platform.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to transmit frames in avb supported multiple-ring platforms.The example transmits 30 number frames. For simple demo, we create frames with some special definition.1. Build transmission frames with broadcast mac address.2. Build different frames for each ring: 10 normal ethernet frame, 10 similar IEC 61883-6 type frames,10 similar IEC 61883-8 type frames and the two IEC 1722 avb frames are set with different vlan priority. Notice, To simply show how to use three different rings in rx/tx on one board. This example set PHY local loop and you will see there will be PHY init auto-negotiation fail and this is normal. because phy can not finishauto-negotiation when phy is in loop back mode. However, the auto-negotiation fail has no impact on this loop back example, so just forget about the failure auto-negotiation." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/enet" path="boards/mcimx93evk/driver_examples/enet/txrx_multiring_transfer">
          <external path="boards/mcimx93evk/driver_examples/enet/txrx_multiring_transfer" type="xml">
            <files mask="enet_txrx_multiring_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_wrap_transfer_cm33" name="edma4_wrap_transfer_cm33" brief="The EDMA4 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/wrap_transfer">
          <external path="boards/mcimx93evk/driver_examples/edma4/wrap_transfer" type="xml">
            <files mask="edma4_wrap_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_scatter_gather_cm33" name="edma4_scatter_gather_cm33" brief="The EDMA4 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/scatter_gather">
          <external path="boards/mcimx93evk/driver_examples/edma4/scatter_gather" type="xml">
            <files mask="edma4_scatter_gather_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_ping_pong_transfer_cm33" name="edma4_ping_pong_transfer_cm33" brief="The EDMA4 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/ping_pong_transfer">
          <external path="boards/mcimx93evk/driver_examples/edma4/ping_pong_transfer" type="xml">
            <files mask="edma4_ping_pong_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_memset_cm33" name="edma4_memset_cm33" brief="The EDMA4 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/memset">
          <external path="boards/mcimx93evk/driver_examples/edma4/memset" type="xml">
            <files mask="edma4_memset_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_memory_to_memory_transfer_cm33" name="edma4_memory_to_memory_transfer_cm33" brief="The EDMA4 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/memory_to_memory_transfer">
          <external path="boards/mcimx93evk/driver_examples/edma4/memory_to_memory_transfer" type="xml">
            <files mask="edma4_memory_to_memory_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_memory_to_memory_cm33" name="edma4_memory_to_memory_cm33" brief="The EDMA4 memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/memory_to_memory">
          <external path="boards/mcimx93evk/driver_examples/edma4/memory_to_memory" type="xml">
            <files mask="edma4_memory_to_memory_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_interleave_transfer_cm33" name="edma4_interleave_transfer_cm33" brief="The EDMA4 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/interleave_transfer">
          <external path="boards/mcimx93evk/driver_examples/edma4/interleave_transfer" type="xml">
            <files mask="edma4_interleave_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma4_channel_link_cm33" name="edma4_channel_link_cm33" brief="The EDMA4 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma4" path="boards/mcimx93evk/driver_examples/edma4/channel_link">
          <external path="boards/mcimx93evk/driver_examples/edma4/channel_link" type="xml">
            <files mask="edma4_channel_link_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma3_scatter_gather_cm33" name="edma3_scatter_gather_cm33" brief="The EDMA3 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA3 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/mcimx93evk/driver_examples/edma3/scatter_gather">
          <external path="boards/mcimx93evk/driver_examples/edma3/scatter_gather" type="xml">
            <files mask="edma3_scatter_gather_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_edma3_memory_to_memory_cm33" name="edma3_memory_to_memory_cm33" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/mcimx93evk/driver_examples/edma3/memory_to_memory">
          <external path="boards/mcimx93evk/driver_examples/edma3/memory_to_memory" type="xml">
            <files mask="edma3_memory_to_memory_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_sai_low_power_audio_rtos_imx93_cm33" name="sai_low_power_audio_rtos_imx93_cm33" brief="In this demo, A core decoded music data and put it to DDR buffer and informs M core with the related information. Then M core will take the ownership of consuming the buffer, it will copy buffer from DDR to TCM, manipulating SDMA to transfer the data to SAI and codec for playback. It gives DDR and A core opportunity to do power saving for rather long time frame. M core will also take ownership of codec initialization. SRTM(Simplified Real Time Messaging) protocol is used to communicate between A core an M4 core. " toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="boards/mcimx93evk/demo_apps/sai_low_power_audio">
          <external path="boards/mcimx93evk/demo_apps/sai_low_power_audio" type="xml">
            <files mask="sai_low_power_audio_rtos_imx93_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_power_mode_switch_rtos_imx93_cm33" name="power_mode_switch_rtos_imx93_cm33" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="boards/mcimx93evk/demo_apps/power_mode_switch">
          <external path="boards/mcimx93evk/demo_apps/power_mode_switch" type="xml">
            <files mask="power_mode_switch_rtos_imx93_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_low_power_wakeword_cm33" name="low_power_wakeword_cm33" brief="In this demo, M core receives audio from microphones and provide them to Linux on Cortex A in DDR and notifies it through RPMSG protocol. If Linux is suspended, the audio is processed locally with wakeword detection algorithm. When voice algorithms triggers, then A core is resumed and audio streaming from M core to A core restarts. When Cortex A is running, music playback from A core can also be sent to M core through DDR and RPMSG protocol but no playback is supported when M core only is running. " toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="boards/mcimx93evk/demo_apps/low_power_wakeword">
          <external path="boards/mcimx93evk/demo_apps/low_power_wakeword" type="xml">
            <files mask="low_power_wakeword_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="mcimx93evk_hello_world_cm33" name="hello_world_cm33" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="boards/mcimx93evk/demo_apps/hello_world">
          <external path="boards/mcimx93evk/demo_apps/hello_world" type="xml">
            <files mask="hello_world_cm33_v3_15.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MIMX9352xxxxM" name="MIMX9352" version="1.0.0" full_name="MIMX9352xxxxM" family="MIMX93xx" platform="i.MX">
      <description>i.MX93</description>
      <metadataSet>
        <metadata key="compatible_device.segger" value="MIMX9352_M33"/>
        <metadata key="compatible_device.pemicro" value="MIMX9352"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
      </defines>
      <core id="cm33_MIMX9352xxxxM" name="cm33" fpu="true" type="cm33" dsp="true" sau="true" mpu="true" tz="true"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX9352xxxxM" name="SRAM_UPPER" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX9352xxxxM" name="SRAM_LOWER" addr="0ffe0000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="256"/>
      <package id="MIMX9352AVTXM" name="MIMX9352AVTXM"/>
      <package id="MIMX9352CVVXM" name="MIMX9352CVVXM"/>
      <package id="MIMX9352DVVXM" name="MIMX9352DVVXM"/>
      <package id="MIMX9352XVVXM" name="MIMX9352XVVXM"/>
      <evaluation_boards>
        <evaluation_board name="mcimx93evk"/>
        <evaluation_board name="mcimx93autoevk"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMX9352xxxxM" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX9352xxxxM" name="internal.has_swo" value="true"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.mcimx93evk.MIMX9352" name="mcimx93evk" brief="Board_project_template mcimx93evk" version="1.0.0" full_name="Board_project_template mcimx93evk" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/mcimx93evk/project_template" project_base_path="board">
      <defines>
        <define name="FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MIMX9352"/>
              <component_dependency value="component.serial_manager_uart.MIMX9352"/>
              <component_dependency value="platform.utilities.assert.MIMX9352"/>
              <component_dependency value="utility.debug_console.MIMX9352"/>
              <component_dependency value="utility.debug_console_template_config.MIMX9352"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MIMX9352"/>
              <component_dependency value="utility.debug_console_lite.MIMX9352"/>
            </all>
          </any_of>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <component_dependency value="device.MIMX9352_startup.MIMX9352"/>
          <component_dependency value="platform.drivers.cache_xcache.MIMX9352"/>
          <component_dependency value="platform.drivers.clock.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.iomuxc.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <component_dependency value="platform.drivers.rgpio.MIMX9352"/>
          <board_dependency value="mcimx93evk"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
      </source>
      <source relative_path="./" config="true" type="c_include">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="board_project_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMX9352_debugger.MIMX9352" name="Device MIMX9352_debugger" brief="Device MIMX9352_debugger" version="1.0.0" full_name="Device MIMX9352_debugger" category="Device/SDK Utilities" user_visible="true" type="debugger" package_base_path="devices/MIMX9352" project_base_path="svd">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
    </component>
    <component id="platform.drivers.clock.MIMX9352" name="clock" brief="Clock Driver" version="1.0.1" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_clock.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iomuxc.MIMX9352" name="iomuxc" brief="IOMUXC Driver" version="1.0.0" full_name="IOMUXC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iomuxc.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.memory.MIMX9352" name="memory" brief="MEMORY Driver" version="1.0.0" full_name="Memory Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_memory.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.edma_soc.MIMX9352" name="edma_soc" brief="EDMA SOC Driver" version="2.0.0" full_name="EDMA SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_edma_soc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma_soc.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.misc_soc.MIMX9352" name="misc_soc" brief="Misc SOC Driver" version="2.0.0" full_name="Misc SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_misc_soc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_misc_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_misc_soc.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.sentinel.MIMX9352" name="sentinel" brief="SENTINEL Driver" version="2.0.3" full_name="SENTINEL Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_sentinel.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sentinel.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sentinel.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_dsi.MIMX9352" name="mipi dsi soc" brief="MIPI DSI SOC Driver" version="2.0.0" full_name="MIPI DSI SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_soc_mipi_dsi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.trdc_soc.MIMX9352" name="trdc_soc" brief="TRDC SOC Driver" version="2.0.0" full_name="TRDC SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trdc_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_trdc_soc.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMX9352" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
        <files mask="riscvllvm.cmake"/>
      </source>
    </component>
    <component id="CMSIS_DSP_Include.MIMX9352" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.16.2" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMX9352" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.16.2" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
        <files mask="arm_fir_decimate_f64.c"/>
        <files mask="arm_fir_decimate_init_f64.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_average_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_average_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMX9352" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMX9352" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.3.0" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMX9352" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMX9352" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMX9352" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMX9352" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMX9352" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MIMX9352" name="CMSIS_Driver_GPIO" brief="Access to #include Driver_GPIO.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver GPIO" category="CMSIS Driver/GPIO" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include/GPIO" template="true" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="Include/GPIO" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_GPIO.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="asm_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMX9352" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMX9352" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMX9352" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMX9352" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMX9352" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMX9352" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMX9352" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMX9352" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMX9352" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMX9352" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="6.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.RTE.MIMX9352" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMX9352/template" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_RTE.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MIMX9352" name="MIMX9352" version="1.0.0" package_base_path="CMSIS" project_base_path="./">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
  </source>
  <source relative_path="Driver/Include/GPIO" type="c_include">
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
  </source>
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Core/Include" type="c_include">
    <files mask="cmsis_clang.h"/>
  </source>
  <source relative_path="Core/Include/m-profile" type="c_include">
    <files mask="cmsis_clang_m.h"/>
  </source>
</component>-->
    <component id="platform.utilities.notifier.MIMX9352" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_notifier.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MIMX9352" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_syscall_stub.c"/>
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="asm_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="fsl_memcpy.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utilities_misc_utilities.MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.incbin.MIMX9352" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities/incbin" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_incbin.MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console_template_config.MIMX9352" name="debug_console_template_config" brief="Utility debug_console Template Config" version="1.0.0" full_name="Utility debug_console Template Config" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="debug_console/config" config="true" type="c_include">
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_template_config.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console/config" type="c_include"/>
        <include_path relative_path="debug_console/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cmsis_drivers.MIMX9352" name="CMSIS driver" brief="CMSIS driver" version="2.0.0" full_name="CMSIS driver" category="Board Support/SDK Project Template" user_visible="true" type="CMSIS_driver" package_base_path="components/cmsis_drivers" project_base_path="CMSIS_drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
    </component>
    <component id="platform.drivers.common.MIMX9352" name="common" brief="common Driver" version="2.5.0" full_name="common Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="fsl_common_arm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_common.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.voice_spot.MIMX9352" name="voice_spot" brief="Voice spot" version="0.24.1" full_name="middleware voice_spot" category="Voice/VoiceSpot library" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_spot" project_base_path="voice_spot">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
    </component>
    <component id="middleware.tinycbor.MIMX9352" name="tinycbor" brief="Concise Binary Object Representation (CBOR) Library" version="0.6.0" full_name="TinyCBOR" category="TinyCBOR/TinyCBOR" user_visible="true" type="middleware" package_base_path="middleware/tinycbor" project_base_path="tinycbor">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tinycbor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pkcs11.MIMX9352" name="pkcs11" brief="Public Key Cryptography Standard #11 defines generic cryptographic token interface." version="2.40.1" full_name="pkcs11" category="AWS IoT/OASIS PKCS Standard 11" user_visible="true" type="middleware" package_base_path="middleware/pkcs11" project_base_path="pkcs11">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="pkcs11t.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.remoteproc.MIMX9352" name="remoteproc" brief="Remote Processor component" version="1.0.0" full_name="Remote Processor component" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="remoteproc">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="remoteproc" type="src">
        <files mask="empty_rsc_table.c"/>
      </source>
      <source relative_path="remoteproc" type="c_include">
        <files mask="remoteproc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_remoteproc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="remoteproc" type="c_include"/>
        <include_path relative_path="remoteproc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.remoteproc.loadscript.MIMX9352" name="remoteproc_load_script" brief="remoteproc-load script" version="1.0.0" full_name="remoteproc-load script" category="Multicore/Linux remoteproc" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="multicore">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="tools/remoteproc-load" type="doc">
        <files mask="Readme.md"/>
      </source>
      <source relative_path="tools/remoteproc-load" type="script">
        <files mask="load.sh"/>
      </source>
      <source relative_path="tools/remoteproc-load" type="other">
        <files mask="remote.cfg"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_remoteproc_loadscript.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.mcmgr.MIMX9352" name="mcmgr" brief="MCMgr" version="4.1.5" full_name="Multicore Manager" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <defines>
        <define name="MULTICORE_APP" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="mcmgr/src" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcmgr/src" type="c_include"/>
        <include_path relative_path="mcmgr/src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.common.MIMX9352" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_version.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_pre_post_action.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_codec.hpp"/>
        <files mask="erpc_basic_codec.hpp"/>
        <files mask="erpc_transport.hpp"/>
        <files mask="erpc_message_buffer.hpp"/>
        <files mask="erpc_message_loggers.hpp"/>
        <files mask="erpc_manually_constructed.hpp"/>
        <files mask="erpc_crc16.hpp"/>
        <files mask="erpc_client_server_common.hpp"/>
        <files mask="erpc_utils.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
        <files mask="erpc_crc16.cpp"/>
        <files mask="erpc_pre_post_action.cpp"/>
        <files mask="erpc_utils.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_transport_setup.h"/>
        <files mask="erpc_mbf_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_setup_extensions.h"/>
        <files mask="erpc_endianness_agnostic_example.h"/>
        <files mask="erpc_endianness_undefined.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source relative_path="erpc/erpc_c/config" type="c_include">
        <files mask="erpc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.doc.MIMX9352" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
        <files mask="SW-Content-Register.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="doc" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/config" project_relative_path="erpc_aux" config="true" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_threading.h" hidden="true"/>
        <files mask="erpc_serial.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_threading_pthreads.cpp" hidden="true"/>
        <files mask="erpc_serial.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp" hidden="true"/>
        <files mask="erpc_setup_serial.cpp" hidden="true"/>
        <files mask="erpc_setup_uart_zephyr.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp" hidden="true"/>
        <files mask="erpc_serial_transport.cpp" hidden="true"/>
        <files mask="erpc_tcp_transport.cpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="erpc_inter_thread_buffer_transport.hpp" hidden="true"/>
        <files mask="erpc_serial_transport.hpp" hidden="true"/>
        <files mask="erpc_tcp_transport.hpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="script">
        <files mask="setup.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="doc">
        <files mask="README_Pypi.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python/erpc" project_relative_path="erpc_aux" type="script">
        <files mask="__init__.py" hidden="true"/>
        <files mask="arbitrator.py" hidden="true"/>
        <files mask="basic_codec.py" hidden="true"/>
        <files mask="client.py" hidden="true"/>
        <files mask="codec.py" hidden="true"/>
        <files mask="crc16.py" hidden="true"/>
        <files mask="erpc_version.py" hidden="true"/>
        <files mask="server.py" hidden="true"/>
        <files mask="simple_server.py" hidden="true"/>
        <files mask="transport.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/bin" project_relative_path="erpc_aux" type="script">
        <files mask="txt_to_c.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj" project_relative_path="erpc_aux" type="other">
        <files mask="project.pbxproj" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" project_relative_path="erpc_aux" type="other">
        <files mask="contents.xcworkspacedata" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="annotations.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AstNode.hpp" hidden="true"/>
        <files mask="AstWalker.hpp" hidden="true"/>
        <files mask="CGenerator.hpp" hidden="true"/>
        <files mask="ErpcLexer.hpp" hidden="true"/>
        <files mask="Generator.hpp" hidden="true"/>
        <files mask="HexValues.hpp" hidden="true"/>
        <files mask="InterfaceDefinition.hpp" hidden="true"/>
        <files mask="JavaGenerator.hpp" hidden="true"/>
        <files mask="Logging.hpp" hidden="true"/>
        <files mask="ParseErrors.hpp" hidden="true"/>
        <files mask="PythonGenerator.hpp" hidden="true"/>
        <files mask="SearchPath.hpp" hidden="true"/>
        <files mask="SymbolScanner.hpp" hidden="true"/>
        <files mask="Token.hpp" hidden="true"/>
        <files mask="UniqueIdChecker.hpp" hidden="true"/>
        <files mask="Utils.hpp" hidden="true"/>
        <files mask="Value.hpp" hidden="true"/>
        <files mask="format_string.hpp" hidden="true"/>
        <files mask="options.hpp" hidden="true"/>
        <files mask="os_config.hpp" hidden="true"/>
        <files mask="smart_ptr.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="src">
        <files mask="AstNode.cpp" hidden="true"/>
        <files mask="AstWalker.cpp" hidden="true"/>
        <files mask="CGenerator.cpp" hidden="true"/>
        <files mask="ErpcLexer.cpp" hidden="true"/>
        <files mask="Generator.cpp" hidden="true"/>
        <files mask="HexValues.cpp" hidden="true"/>
        <files mask="InterfaceDefinition.cpp" hidden="true"/>
        <files mask="JavaGenerator.cpp" hidden="true"/>
        <files mask="Logging.cpp" hidden="true"/>
        <files mask="ParseErrors.cpp" hidden="true"/>
        <files mask="PythonGenerator.cpp" hidden="true"/>
        <files mask="SearchPath.cpp" hidden="true"/>
        <files mask="SymbolScanner.cpp" hidden="true"/>
        <files mask="Token.cpp" hidden="true"/>
        <files mask="UniqueIdChecker.cpp" hidden="true"/>
        <files mask="Utils.cpp" hidden="true"/>
        <files mask="erpcgen.cpp" hidden="true"/>
        <files mask="format_string.cpp" hidden="true"/>
        <files mask="options.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen_lexer.l" hidden="true"/>
        <files mask="erpcgen_parser.y" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="cpptempl.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="src">
        <files mask="cpptempl.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="other">
        <files mask="README.rst" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/templates" project_relative_path="erpc_aux" type="other">
        <files mask="c_client_header.template" hidden="true"/>
        <files mask="c_client_source.template" hidden="true"/>
        <files mask="c_common_header.template" hidden="true"/>
        <files mask="c_crc.template" hidden="true"/>
        <files mask="c_server_header.template" hidden="true"/>
        <files mask="c_server_source.template" hidden="true"/>
        <files mask="cpp_client_header.template" hidden="true"/>
        <files mask="cpp_client_source.template" hidden="true"/>
        <files mask="cpp_coders.template" hidden="true"/>
        <files mask="cpp_common_functions.template" hidden="true"/>
        <files mask="cpp_interface_header.template" hidden="true"/>
        <files mask="cpp_interface_source.template" hidden="true"/>
        <files mask="cpp_server_header.template" hidden="true"/>
        <files mask="cpp_server_source.template" hidden="true"/>
        <files mask="java_client.template" hidden="true"/>
        <files mask="java_coders.template" hidden="true"/>
        <files mask="java_const.template" hidden="true"/>
        <files mask="java_enum.template" hidden="true"/>
        <files mask="java_interface.template" hidden="true"/>
        <files mask="java_server.template" hidden="true"/>
        <files mask="java_struct.template" hidden="true"/>
        <files mask="py_client.template" hidden="true"/>
        <files mask="py_coders.template" hidden="true"/>
        <files mask="py_common.template" hidden="true"/>
        <files mask="py_global_init.template" hidden="true"/>
        <files mask="py_init.template" hidden="true"/>
        <files mask="py_interface.template" hidden="true"/>
        <files mask="py_server.template" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AliasType.hpp" hidden="true"/>
        <files mask="Annotation.hpp" hidden="true"/>
        <files mask="ArrayType.hpp" hidden="true"/>
        <files mask="BuiltinType.hpp" hidden="true"/>
        <files mask="ConstType.hpp" hidden="true"/>
        <files mask="DataType.hpp" hidden="true"/>
        <files mask="EnumMember.hpp" hidden="true"/>
        <files mask="EnumType.hpp" hidden="true"/>
        <files mask="Function.hpp" hidden="true"/>
        <files mask="FunctionType.hpp" hidden="true"/>
        <files mask="Group.hpp" hidden="true"/>
        <files mask="Interface.hpp" hidden="true"/>
        <files mask="ListType.hpp" hidden="true"/>
        <files mask="Program.hpp" hidden="true"/>
        <files mask="StructMember.hpp" hidden="true"/>
        <files mask="StructType.hpp" hidden="true"/>
        <files mask="Symbol.hpp" hidden="true"/>
        <files mask="SymbolScope.hpp" hidden="true"/>
        <files mask="UnionCase.hpp" hidden="true"/>
        <files mask="UnionType.hpp" hidden="true"/>
        <files mask="VoidType.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="src">
        <files mask="Type.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.sln" hidden="true"/>
        <files mask="erpcgen.vcxproj" hidden="true"/>
        <files mask="erpcgen.vcxproj.filters" hidden="true"/>
        <files mask="erpcgen.vcxproj.user" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="doc">
        <files mask="readme_erpcgen.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="src">
        <files mask="stdafx.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="c_include">
        <files mask="stdafx.h" hidden="true"/>
        <files mask="stdbool.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="Sniffer.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="src">
        <files mask="Sniffer.cpp" hidden="true"/>
        <files mask="erpcsniffer.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/mk" project_relative_path="erpc_aux" type="script">
        <files mask="common.mk" hidden="true"/>
        <files mask="erpc_common.mk" hidden="true"/>
        <files mask="flags.mk" hidden="true"/>
        <files mask="paths.mk" hidden="true"/>
        <files mask="subdirs.mk" hidden="true"/>
        <files mask="targets.mk" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/NOTEPADpp" project_relative_path="erpc_aux" type="xml">
        <files mask="IDl_deep_black.xml" hidden="true"/>
        <files mask="IDl_default.xml" hidden="true"/>
        <files mask="template_deep_black.xml" hidden="true"/>
        <files mask="template_default.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="vsc-extension-quickstart.md" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="other">
        <files mask="language-configuration.json" hidden="true"/>
        <files mask="package.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/.vscode" project_relative_path="erpc_aux" type="other">
        <files mask="launch.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/img" project_relative_path="erpc_aux" type="image">
        <files mask="erpcPic.png" hidden="true"/>
        <files mask="templatePic.png" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/syntaxes" project_relative_path="erpc_aux" type="other">
        <files mask="erpc.tmLanguage.json" hidden="true"/>
        <files mask="template.tmLanguage.json" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Mac" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Windows" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.exe" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_doc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.MIMX9352" name="multicore middleware" brief="Multicore SDK" version="2.16.0" full_name="Multicore Software Development Kit" category="Multicore/MulticoreSDK" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="multicore">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
    </component>
    <!--<component id="middleware.lwip.unused_files.MIMX9352" name="lwIP_unused_files" version="2.2.1" package_base_path="middleware/lwip" project_base_path="lwip">
  <source exclude="true" relative_path="src" type="other">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="c_include">
    <files mask="config.h" hidden="true"/>
    <files mask="fuzz_common.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="src">
    <files mask="fuzz.c" hidden="true"/>
    <files mask="fuzz2.c" hidden="true"/>
    <files mask="fuzz3.c" hidden="true"/>
    <files mask="fuzz_common.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
    <files mask="arp_req.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
    <files mask="icmp_ping.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
    <files mask="neighbor_solicitation.bin" hidden="true"/>
    <files mask="router_adv.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
    <files mask="tcp_syn.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
    <files mask="udp_port_5000.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="script">
    <files mask="output_to_pcap.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="src">
    <files mask="sockets_stresstest.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="c_include">
    <files mask="sockets_stresstest.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="src">
    <files mask="test_sockets.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="c_include">
    <files mask="test_sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="src">
    <files mask="test_def.c" hidden="true"/>
    <files mask="test_dns.c" hidden="true"/>
    <files mask="test_mem.c" hidden="true"/>
    <files mask="test_netif.c" hidden="true"/>
    <files mask="test_pbuf.c" hidden="true"/>
    <files mask="test_timers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="c_include">
    <files mask="test_def.h" hidden="true"/>
    <files mask="test_dns.h" hidden="true"/>
    <files mask="test_mem.h" hidden="true"/>
    <files mask="test_netif.h" hidden="true"/>
    <files mask="test_pbuf.h" hidden="true"/>
    <files mask="test_timers.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="src">
    <files mask="test_dhcp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
    <files mask="test_dhcp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="src">
    <files mask="test_dhcp6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="c_include">
    <files mask="test_dhcp6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="src">
    <files mask="test_etharp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="c_include">
    <files mask="test_etharp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="src">
    <files mask="test_ip4.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="c_include">
    <files mask="test_ip4.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="src">
    <files mask="test_ip6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="c_include">
    <files mask="test_ip6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="c_include">
    <files mask="lwip_check.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="src">
    <files mask="lwip_unittests.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="src">
    <files mask="test_mdns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="c_include">
    <files mask="test_mdns.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="src">
    <files mask="test_mqtt.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
    <files mask="test_mqtt.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="src">
    <files mask="test_pppos.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="c_include">
    <files mask="test_pppos.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="src">
    <files mask="tcp_helper.c" hidden="true"/>
    <files mask="test_tcp.c" hidden="true"/>
    <files mask="test_tcp_oos.c" hidden="true"/>
    <files mask="test_tcp_state.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="c_include">
    <files mask="tcp_helper.h" hidden="true"/>
    <files mask="test_tcp.h" hidden="true"/>
    <files mask="test_tcp_oos.h" hidden="true"/>
    <files mask="test_tcp_state.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="src">
    <files mask="test_udp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="c_include">
    <files mask="test_udp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="src">
    <files mask="dhcp_extra_opts.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="c_include">
    <files mask="dhcp_extra_opts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
    <files mask="ip6_route_table.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
    <files mask="ip6_route_table.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
    <files mask="dnssd.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
    <files mask="dnssd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
    <files mask="tcp_isn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
    <files mask="tcp_isn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
    <files mask="tcp_md5.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
    <files mask="tcp_md5.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="src">
    <files mask="chargen.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
    <files mask="chargen.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
    <files mask="httpserver-netconn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
    <files mask="httpserver-netconn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="src">
    <files mask="netio.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
    <files mask="netio.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="src">
    <files mask="rtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
    <files mask="rtp.h" hidden="true"/>
    <files mask="rtpdata.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="src">
    <files mask="shell.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
    <files mask="shell.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
    <files mask="socket_examples.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
    <files mask="socket_examples.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/Coverity" type="src">
    <files mask="coverity.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
    <files mask="ethernetif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
    <files mask="default_netif.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="lwippools.h" hidden="true"/>
    <files mask="ppp_settings.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="other">
    <files mask="lwipcfg.h.ci" hidden="true"/>
    <files mask="lwipcfg.h.example" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="src">
    <files mask="test.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
    <files mask="opt_default.h" hidden="true"/>
    <files mask="opt_dualstack.h" hidden="true"/>
    <files mask="opt_ipv4only.h" hidden="true"/>
    <files mask="opt_ipv6only.h" hidden="true"/>
    <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
    <files mask="opt_no_udp_dualstack.h" hidden="true"/>
    <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
    <files mask="opt_none.h" hidden="true"/>
    <files mask="opt_nosys_dual.h" hidden="true"/>
    <files mask="opt_nosys_ipv4.h" hidden="true"/>
    <files mask="opt_nosys_ipv6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
    <files mask="cgi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
    <files mask="cgi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
    <files mask="404.html" hidden="true"/>
    <files mask="index.html" hidden="true"/>
    <files mask="login.html" hidden="true"/>
    <files mask="loginfail.html" hidden="true"/>
    <files mask="session.html" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
    <files mask="sics.gif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
    <files mask="ssi.shtml" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd" type="src">
    <files mask="examples_fsdata.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
    <files mask="fs_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
    <files mask="fs_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
    <files mask="genfiles_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
    <files mask="genfiles_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
    <files mask="https_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
    <files mask="https_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
    <files mask="post_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
    <files mask="ssi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
    <files mask="ssi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
    <files mask="lwiperf_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
    <files mask="lwiperf_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="src">
    <files mask="mdns_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
    <files mask="mdns_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
    <files mask="mqtt_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
    <files mask="mqtt_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="src">
    <files mask="pppos_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
    <files mask="pppos_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="src">
    <files mask="snmp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
    <files mask="snmp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
    <files mask="lwip_prvmib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
    <files mask="private_mib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
    <files mask="snmpv3_dummy.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
    <files mask="snmpv3_dummy.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="src">
    <files mask="sntp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
    <files mask="sntp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="src">
    <files mask="tftp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
    <files mask="tftp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports" type="script">
    <files mask="CMakeCommon.cmake" hidden="true"/>
    <files mask="Common.allports.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="other">
    <files mask="README" hidden="true"/>
    <files mask="setup-tapif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
    <files mask="config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
    <files mask="iteropts.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
    <files mask="cc.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
    <files mask="fifo.h" hidden="true"/>
    <files mask="list.h" hidden="true"/>
    <files mask="pcapif.h" hidden="true"/>
    <files mask="sio.h" hidden="true"/>
    <files mask="tapif.h" hidden="true"/>
    <files mask="vdeif.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
    <files mask="fifo.c" hidden="true"/>
    <files mask="list.c" hidden="true"/>
    <files mask="pcapif.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="tapif.c" hidden="true"/>
    <files mask="vdeif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
    <files mask="perf.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="script">
    <files mask="Uninstall.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib/include/posix" type="c_include">
    <files mask="inet.h" hidden="true"/>
    <files mask="sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
    <files mask="check_stdint.h" hidden="true"/>
    <files mask="config.h" hidden="true"/>
    <files mask="stdbool.h" hidden="true"/>
    <files mask="unistd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
    <files mask="time.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
    <files mask="time.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
    <files mask="bpstruct.h" hidden="true"/>
    <files mask="cc.h" hidden="true"/>
    <files mask="epstruct.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
    <files mask="build_coverity.cmd" hidden="true"/>
    <files mask="libcheck.vcxproj" hidden="true"/>
    <files mask="libcheck.vcxproj.filters" hidden="true"/>
    <files mask="lwIP.vcxproj" hidden="true"/>
    <files mask="lwIP.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_Test.sln" hidden="true"/>
    <files mask="lwIP_Test.vcxproj" hidden="true"/>
    <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_fuzz.sln" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_unittests.sln" hidden="true"/>
    <files mask="lwip_fuzz.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
    <files mask="makefsdata.vcxproj" hidden="true"/>
    <files mask="makefsdata.vcxproj.filters" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="src">
    <files mask="pcapif.c" hidden="true"/>
    <files mask="pcapif_helper.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
    <files mask="pcapif.h" hidden="true"/>
    <files mask="pcapif_helper.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="doc">
    <files mask="readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
    <files mask="altcp_tls_mbedtls.c" hidden="true"/>
    <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
    <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/http" type="src">
    <files mask="altcp_proxyconnect.c" hidden="true"/>
    <files mask="http_client.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/netbiosns" type="src">
    <files mask="netbiosns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/smtp" type="src">
    <files mask="smtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="src">
    <files mask="snmp_asn1.c" hidden="true"/>
    <files mask="snmp_core.c" hidden="true"/>
    <files mask="snmp_mib2.c" hidden="true"/>
    <files mask="snmp_mib2_icmp.c" hidden="true"/>
    <files mask="snmp_mib2_interfaces.c" hidden="true"/>
    <files mask="snmp_mib2_ip.c" hidden="true"/>
    <files mask="snmp_mib2_snmp.c" hidden="true"/>
    <files mask="snmp_mib2_system.c" hidden="true"/>
    <files mask="snmp_mib2_tcp.c" hidden="true"/>
    <files mask="snmp_mib2_udp.c" hidden="true"/>
    <files mask="snmp_msg.c" hidden="true"/>
    <files mask="snmp_netconn.c" hidden="true"/>
    <files mask="snmp_pbuf_stream.c" hidden="true"/>
    <files mask="snmp_raw.c" hidden="true"/>
    <files mask="snmp_scalar.c" hidden="true"/>
    <files mask="snmp_snmpv2_framework.c" hidden="true"/>
    <files mask="snmp_snmpv2_usm.c" hidden="true"/>
    <files mask="snmp_table.c" hidden="true"/>
    <files mask="snmp_threadsync.c" hidden="true"/>
    <files mask="snmp_traps.c" hidden="true"/>
    <files mask="snmpv3.c" hidden="true"/>
    <files mask="snmpv3_mbedtls.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="c_include">
    <files mask="snmp_asn1.h" hidden="true"/>
    <files mask="snmp_core_priv.h" hidden="true"/>
    <files mask="snmp_msg.h" hidden="true"/>
    <files mask="snmp_pbuf_stream.h" hidden="true"/>
    <files mask="snmpv3_priv.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/tftp" type="src">
    <files mask="tftp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip" type="other">
    <files mask="init.h.cmake.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
    <files mask="altcp_proxyconnect.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
    <files mask="http_client.h" hidden="true"/>
    <files mask="netbiosns.h" hidden="true"/>
    <files mask="netbiosns_opts.h" hidden="true"/>
    <files mask="smtp.h" hidden="true"/>
    <files mask="smtp_opts.h" hidden="true"/>
    <files mask="snmp.h" hidden="true"/>
    <files mask="snmpv3.h" hidden="true"/>
    <files mask="snmp_core.h" hidden="true"/>
    <files mask="snmp_mib2.h" hidden="true"/>
    <files mask="snmp_opts.h" hidden="true"/>
    <files mask="snmp_scalar.h" hidden="true"/>
    <files mask="snmp_snmpv2_framework.h" hidden="true"/>
    <files mask="snmp_snmpv2_usm.h" hidden="true"/>
    <files mask="snmp_table.h" hidden="true"/>
    <files mask="snmp_threadsync.h" hidden="true"/>
    <files mask="tftp_client.h" hidden="true"/>
    <files mask="tftp_common.h" hidden="true"/>
    <files mask="tftp_opts.h" hidden="true"/>
    <files mask="tftp_server.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="other">
    <files mask="FILES" hidden="true"/>
  </source>
</component>-->
    <component id="component.srtm_audio_service.MIMX9352" name="srtm audio service" brief="Driver srtm audio service" version="1.0.0" full_name="Driver srtm audio services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_audio_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_audio_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_audio_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_asi_edma_adapter.MIMX9352" name="srtm sai edma adapter" brief="Driver srtm sai edma adapter" version="1.0.0" full_name="Driver srtm sai edma adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
    </component>
    <component id="component.srtm_i2c_service.MIMX9352" name="srtm i2c service" brief="Driver srtm i2c service" version="1.0.0" full_name="Driver srtm auto services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_i2c_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_i2c_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_i2c_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_auto_service.MIMX9352" name="srtm auto service" brief="Driver srtm auto service" version="1.0.0" full_name="Driver srtm auto services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_auto_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_auto_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_auto_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_io_service.MIMX9352" name="srtm io service" brief="Driver srtm io service" version="1.0.0" full_name="Driver srtm io services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_io_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_io_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_io_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_keypad_service.MIMX9352" name="srtm keypad service" brief="Driver srtm keypad service" version="1.0.0" full_name="Driver srtm keypad services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_keypad_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_keypad_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_keypad_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_lfcl_service.MIMX9352" name="srtm lfcl service" brief="Driver srtm lfcl service" version="1.0.0" full_name="Driver srtm lfcl services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_lfcl_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_lfcl_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_lfcl_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_netc_service.MIMX9352" name="srtm netc service" brief="Driver srtm netc service" version="1.0.0" full_name="Driver srtm netc services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_netc_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_netc_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_netc_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_pmic_service.MIMX9352" name="srtm pmic service" brief="Driver srtm pmic service" version="1.0.0" full_name="Driver srtm pmic services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_pmic_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_pmic_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_pmic_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_rtc_service.MIMX9352" name="srtm rtc service" brief="Driver srtm rtc service" version="1.0.0" full_name="Driver srtm rtc services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_rtc_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_rtc_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_rtc_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_sensor_service.MIMX9352" name="srtm sensor service" brief="Driver srtm sensor service" version="1.0.0" full_name="Driver srtm sensor services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_sensor_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_sensor_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_sensor_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_snvs_lp_rtc_adapter.MIMX9352" name="srtm snvs lp rtc adapter" brief="Driver srtm snvs lp rtc adapter" version="1.0.0" full_name="Driver snvs lp rtc adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_snvs_lp_rtc_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_snvs_lp_rtc_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_snvs_lp_rtc_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.srtm.freertos.MIMX9352" name="freertos" brief="Driver srtm freertos" version="1.0.0" full_name="Driver srtm freertos" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/port" project_base_path="srtm/port">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="srtm_heap_freertos.c"/>
        <files mask="srtm_mutex_freertos.c"/>
        <files mask="srtm_sem_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_srtm_freertos.MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.silicon_id_imx8.MIMX9352" name="silicon_id_imx8" brief="Driver silicon_id imx8" version="2.0.0" full_name="Driver silicon_id_imx8" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imx8" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imx8.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imx93.MIMX9352" name="silicon_id_imx93" brief="Driver silicon_id imx93" version="2.0.0" full_name="Driver silicon_id_imx93" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imx93" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imx93.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt10xx.MIMX9352" name="silicon_id_rt10xx" brief="Driver silicon_id rt10xx" version="2.0.0" full_name="Driver silicon_id_rt10xx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/rt10xx" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imxrt10xx.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt1170.MIMX9352" name="silicon_id_rt1170" brief="Driver silicon_id imxrt1170" version="2.0.0" full_name="Driver silicon_id_rt1170" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imxrt1170" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imxrt1170.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt1180.MIMX9352" name="silicon_id_rt1180" brief="Driver silicon_id imxrt1180" version="2.0.0" full_name="Driver silicon_id_rt1180" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imxrt1180" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imxrt1180.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_rw610.MIMX9352" name="silicon_id_rw610" brief="Driver silicon_id rw610" version="2.0.0" full_name="Driver silicon_id_rw610" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/rw610" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_rw610.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_scfw.MIMX9352" name="silicon_id_scfw" brief="Driver silicon_id scfw" version="2.0.0" full_name="Driver silicon_id_scfw" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/scfw" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_scfw.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMX9352" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_swo.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMX9352" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SSERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_virtual.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMX9352" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_software_rng_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MIMX9352" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/reset" project_base_path="component/reset">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_reset_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMX9352" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_panic.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_template_config.MIMX9352" name="osa" brief="Component osa template config" version="1.0.0" full_name="Component osa template config" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="config" config="true" type="c_include">
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_template_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip_fmu.MIMX9352" name="mflash onchip_fmu" brief="mflash onchip_fmu" version="1.0.0" full_name="mflash onchip_fmu" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
    </component>
    <component id="driver.adp5585.MIMX9352" name="adp5585" brief="IO expander ADP5585 driver" version="1.0.0" full_name="Driver ADP5585" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/expander/adp5585" project_base_path="components/expander/adp5585">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adp5585.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adp5585.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_adp5585.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca6416a.MIMX9352" name="pca6416a" brief="IO expander PCA6416A driver" version="1.0.0" full_name="Driver PCA6416A" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/expander/pca6416a" project_base_path="component/expander/pca6416a">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca6416a.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca6416a.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pca6416a.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcal6408.MIMX9352" name="pcal6408" brief="IO expander PCAL6408 driver" version="1.0.0" full_name="Driver PCAL6408" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/expander/pcal6408" project_base_path="component/expander/pcal6408">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pcal6408.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcal6408.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcal6408.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcal6524.MIMX9352" name="pcal6524" brief="IO expander PCAL6524 driver" version="1.0.0" full_name="Driver PCAL6524" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/expander/pcal6524" project_base_path="component/expander/pcal6524">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pcal6524.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcal6524.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcal6524.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.MIMX9352" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_software_crc_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ak4497_adapter.MIMX9352" name="codec_ak4497_adapter" brief="Component ak4497 adapter for single codec" version="2.2.0" full_name="Component ak4497_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/ak4497" type="c_include">
        <files mask="fsl_codec_ak4497_adapter.h"/>
      </source>
      <source relative_path="port/ak4497" type="src">
        <files mask="fsl_codec_ak4497_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ak4497_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ak4497" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/ak4497" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMX9352" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <defines>
        <define name="CODEC_MULTI_ADAPTERS" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_adapters.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42448_adapter.MIMX9352" name="codec_cs42448_adapter" brief="Component cs42448 adapter for single codec" version="2.2.1" full_name="Component cs42448_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/cs42448" type="c_include">
        <files mask="fsl_codec_cs42448_adapter.h"/>
      </source>
      <source relative_path="port/cs42448" type="src">
        <files mask="fsl_codec_cs42448_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42448_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42448" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42448" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMX9352" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/cs42888" type="c_include">
        <files mask="fsl_codec_cs42888_adapter.h"/>
      </source>
      <source relative_path="port/cs42888" type="src">
        <files mask="fsl_codec_cs42888_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42888_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42888" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42888" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMX9352" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_da7212_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/da7212" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/da7212" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm186x_adapter.MIMX9352" name="codec_pcm186x_adapter" brief="Component pcm186x adapter for single codec" version="2.0.0" full_name="Component pcm186x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/pcm186x" type="c_include">
        <files mask="fsl_codec_pcm186x_adapter.h"/>
      </source>
      <source relative_path="port/pcm186x" type="src">
        <files mask="fsl_codec_pcm186x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pcm186x_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm186x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm186x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm512x_adapter.MIMX9352" name="codec_pcm512x_adapter" brief="Component pcm512x adapter for single codec" version="2.0.0" full_name="Component pcm512x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/pcm512x" type="c_include">
        <files mask="fsl_codec_pcm512x_adapter.h"/>
      </source>
      <source relative_path="port/pcm512x" type="src">
        <files mask="fsl_codec_pcm512x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pcm512x_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm512x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm512x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMX9352" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_sgtl_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sgtl5000" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sgtl5000" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9896_adapter.MIMX9352" name="codec_tfa9896_adapter" brief="Component tfa9896 adapter for single codec" version="2.2.0" full_name="Component tfa9896_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/tfa9896" type="c_include">
        <files mask="fsl_codec_tfa9896_adapter.h"/>
      </source>
      <source relative_path="port/tfa9896" type="src">
        <files mask="fsl_codec_tfa9896_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tfa9896_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9896" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9896" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9xxx_adapter.MIMX9352" name="codec_tfa9xxx_adapter" brief="Component tfa9xxx adapter for single codec" version="2.2.0" full_name="Component tfa9xxx_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/tfa9xxx" type="c_include">
        <files mask="fsl_codec_tfa9xxx_adapter.h"/>
      </source>
      <source relative_path="port/tfa9xxx" type="src">
        <files mask="fsl_codec_tfa9xxx_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tfa9xxx_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9xxx" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9xxx" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8524_adapter.MIMX9352" name="codec_wm8524_adapter" brief="Component wm8524 adapter for single codec" version="2.2.0" full_name="Component wm8524_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/wm8524" type="c_include">
        <files mask="fsl_codec_wm8524_adapter.h"/>
      </source>
      <source relative_path="port/wm8524" type="src">
        <files mask="fsl_codec_wm8524_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8524_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8524" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8524" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMX9352" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/wm8904" type="c_include">
        <files mask="fsl_codec_wm8904_adapter.h"/>
      </source>
      <source relative_path="port/wm8904" type="src">
        <files mask="fsl_codec_wm8904_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8904_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8904" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8904" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMX9352" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8960_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8960" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8960" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMX9352" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8962_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8962" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8962" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMX9352" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_codec.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template.MIMX9352.MIMX9352" name="MIMX9352" brief="Devices_project_template MIMX9352" version="1.0.0" full_name="Devices_project_template MIMX9352" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMX9352/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MIMX9352"/>
              <component_dependency value="component.serial_manager_uart.MIMX9352"/>
              <component_dependency value="platform.utilities.assert.MIMX9352"/>
              <component_dependency value="utility.debug_console.MIMX9352"/>
              <component_dependency value="utility.debug_console_template_config.MIMX9352"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MIMX9352"/>
              <component_dependency value="utility.debug_console_lite.MIMX9352"/>
            </all>
          </any_of>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <component_dependency value="device.MIMX9352_startup.MIMX9352"/>
          <component_dependency value="platform.drivers.clock.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.iomuxc.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <component_dependency value="platform.drivers.rgpio.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_project_template.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMX9352_linker.MIMX9352" name="MIMX9352_linker" brief="Device MIMX9352_linker" version="1.0.0" full_name="Device MIMX9352_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="devices/MIMX9352" project_base_path="MIMX9352">
      <dependencies>
        <device_dependency value="MIMX9352xxxxM"/>
      </dependencies>
    </component>
    <component id="platform.drivers.sai_edma.MIMX9352" name="sai_edma" brief="SAI EDMA Driver" version="2.7.1" full_name="SAI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sai_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMX9352" name="i2c_edma" brief="LPI2C Driver" version="2.4.2" full_name="LPI2C Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMX9352" name="lpspi_edma" brief="LPSPI Driver" version="2.4.5" full_name="LPSPI Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMX9352" name="lpuart_edma" brief="LPUART Driver" version="2.6.0" full_name="LPUART Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_edma.MIMX9352" name="flexspi_edma" brief="FLEXSPI Driver" version="2.3.3" full_name="FLEXSPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm_edma.MIMX9352" name="pdm_edma" brief="PDM EDMA Driver" version="2.6.3" full_name="PDM EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pdm_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan_edma.MIMX9352" name="flexcan_edma" brief="FLEXCAN Driver" version="2.11.7" full_name="FLEXCAN EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcan_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMX9352" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_uart.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMX9352" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console_lite" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_lite.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" type="c_include"/>
        <include_path relative_path="debug_console_lite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma4.MIMX9352" name="edma" brief="EDMA Driver" version="2.10.1" full_name="EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers/edma4" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="driver.edma_soc.MIMX9352"/>
          <component_dependency value="platform.drivers.memory.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
        <files mask="fsl_edma_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma4.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet.MIMX9352" name="enet" brief="ENET Driver" version="2.9.2" full_name="ENET Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.memory.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_enet.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet_qos.MIMX9352" name="enet_qos" brief="ENET QoS Driver" version="2.6.4" full_name="ENET QoS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.memory.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_qos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_qos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_enet_qos.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMX9352_CMSIS.MIMX9352" name="MIMX9352_CMSIS" brief="Device MIMX9352_cmsis" version="1.0.0" full_name="Device MIMX9352_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMX9352" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="MIMX9352_cm33.h"/>
        <files mask="MIMX9352_cm33_features.h"/>
        <files mask="MIMX9352_cm33_COMMON.h"/>
      </source>
      <source relative_path="periph" type="c_include">
        <files mask="PERI_ADC.h"/>
        <files mask="PERI_ANA_OSC.h"/>
        <files mask="PERI_AXBS.h"/>
        <files mask="PERI_BBNSM.h"/>
        <files mask="PERI_BLK_CTRL_MLMIX.h"/>
        <files mask="PERI_BLK_CTRL_NICMIX.h"/>
        <files mask="PERI_BLK_CTRL_NS_AONMIX.h"/>
        <files mask="PERI_BLK_CTRL_S_AONMIX.h"/>
        <files mask="PERI_BLK_CTRL_WAKEUPMIX.h"/>
        <files mask="PERI_CACHE_ECC_MCM.h"/>
        <files mask="PERI_CAN.h"/>
        <files mask="PERI_CCM.h"/>
        <files mask="PERI_DDRC.h"/>
        <files mask="PERI_DDRMIX_BLK_CTRL.h"/>
        <files mask="PERI_DMA.h"/>
        <files mask="PERI_DMA4.h"/>
        <files mask="PERI_ENET.h"/>
        <files mask="PERI_ENET_QOS.h"/>
        <files mask="PERI_FLEXIO.h"/>
        <files mask="PERI_FLEXSPI.h"/>
        <files mask="PERI_FSB.h"/>
        <files mask="PERI_GPC_CPU_CTRL.h"/>
        <files mask="PERI_GPC_GLOBAL.h"/>
        <files mask="PERI_I2S.h"/>
        <files mask="PERI_I3C.h"/>
        <files mask="PERI_IOMUXC1.h"/>
        <files mask="PERI_IPC.h"/>
        <files mask="PERI_ISI.h"/>
        <files mask="PERI_LCDIF.h"/>
        <files mask="PERI_LPI2C.h"/>
        <files mask="PERI_LPIT.h"/>
        <files mask="PERI_LPSPI.h"/>
        <files mask="PERI_LPTMR.h"/>
        <files mask="PERI_LPUART.h"/>
        <files mask="PERI_MCM.h"/>
        <files mask="PERI_MEDIAMIX_BLK_CTRL.h"/>
        <files mask="PERI_MIPI_CSI.h"/>
        <files mask="PERI_MIPI_DSI.h"/>
        <files mask="PERI_MU.h"/>
        <files mask="PERI_NPU.h"/>
        <files mask="PERI_OCRAM_MECC.h"/>
        <files mask="PERI_OTFAD.h"/>
        <files mask="PERI_PDM.h"/>
        <files mask="PERI_PLL.h"/>
        <files mask="PERI_PXP.h"/>
        <files mask="PERI_RGPIO.h"/>
        <files mask="PERI_S3MU.h"/>
        <files mask="PERI_SEMA42.h"/>
        <files mask="PERI_SPDIF.h"/>
        <files mask="PERI_SRC_GENERAL_REG.h"/>
        <files mask="PERI_SRC_MEM_SLICE.h"/>
        <files mask="PERI_SRC_MIX_SLICE.h"/>
        <files mask="PERI_SYSPM.h"/>
        <files mask="PERI_SYS_CTR_COMPARE.h"/>
        <files mask="PERI_SYS_CTR_CONTROL.h"/>
        <files mask="PERI_SYS_CTR_READ.h"/>
        <files mask="PERI_TCM_ECC_MCM.h"/>
        <files mask="PERI_TMU.h"/>
        <files mask="PERI_TPM.h"/>
        <files mask="PERI_TRDC_MBC0.h"/>
        <files mask="PERI_TRDC_MBC2.h"/>
        <files mask="PERI_TRDC_MBC4.h"/>
        <files mask="PERI_TRGMUX.h"/>
        <files mask="PERI_TSTMR.h"/>
        <files mask="PERI_USB.h"/>
        <files mask="PERI_USBNC.h"/>
        <files mask="PERI_USDHC.h"/>
        <files mask="PERI_WAKEUP_AHBRM.h"/>
        <files mask="PERI_WDOG.h"/>
        <files mask="PERI_XCACHE.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_CMSIS.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="periph" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="periph" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMX9352_system.MIMX9352" name="MIMX9352_system" brief="Device MIMX9352_system" version="1.0.0" full_name="Device MIMX9352_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMX9352" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="device.MIMX9352_CMSIS.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_MIMX9352_cm33.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_MIMX9352_cm33.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_system.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMX9352_startup.MIMX9352" name="MIMX9352_startup" brief="Device MIMX9352_startup" version="1.0.0" full_name="Device MIMX9352_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMX9352" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="device.MIMX9352_system.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include">
        <files mask="startup_MIMX9352_cm33.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_startup.MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="CMSIS_Include_core_cm.MIMX9352" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="6.1.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <device_dependency value="MIMX9352xxxxM"/>
          <device_core_dependency value="cm33_MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="m-profile" type="c_include">
        <files mask="cmsis_gcc_m.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="core_cm33.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="armv8m_mpu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="m-profile" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="m-profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX.MIMX9352" name="CMSIS_RTOS2_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <defines>
        <define name="CMSIS_device_header" value="'&quot;fsl_device_registers.h&quot;'"/>
        <define name="RTE_COMPONENTS_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMX9352"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_delay.c"/>
        <files mask="rtx_evflags.c"/>
        <files mask="rtx_evr.c"/>
        <files mask="rtx_kernel.c"/>
        <files mask="rtx_memory.c"/>
        <files mask="rtx_mempool.c"/>
        <files mask="rtx_msgqueue.c"/>
        <files mask="rtx_mutex.c"/>
        <files mask="rtx_semaphore.c"/>
        <files mask="rtx_system.c"/>
        <files mask="rtx_thread.c"/>
        <files mask="rtx_timer.c"/>
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source relative_path="Source" type="src" device_cores="cm33_MIMX9352xxxxM">
        <files mask="os_systick.c"/>
      </source>
      <source toolchain="armgcc" relative_path="RTX/Source/GCC" type="asm_include" device_cores="cm33_MIMX9352xxxxM">
        <files mask="irq_armv8mml.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX_LIB.MIMX9352" name="CMSIS_RTOS2_RTX5_Library" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMX9352"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMX9352xxxxM" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMX9352xxxxM" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_MIMX9352xxxxM" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_MIMX9352xxxxM" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX_LIB.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Source" type="asm_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.str.MIMX9352" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="str" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="str" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_str.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" type="c_include"/>
        <include_path relative_path="str" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console.MIMX9352" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="utility.str.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" type="c_include"/>
        <include_path relative_path="debug_console" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MIMX9352" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="utility.debug_console.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MIMX9352" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="platform.utilities.assert.MIMX9352"/>
          </not>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="utility.debug_console_lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert_lite.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMX9352" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMX9352"/>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMX9352"/>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMX9352"/>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMX9352"/>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.config.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_non_trustzone.MIMX9352" name="cm33 nontrustzone port" brief="FreeRTOS cm33 non trustzone port" version="11.0.1" full_name="FreeRTOS cm33 non trustzone port" category="RTOS/cm33_non_trustzone_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
          <device_core_dependency value="cm33_MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX9352xxxxM" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_non_trustzone.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc" type="asm_include" device_cores="cm33_MIMX9352xxxxM" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.non_secure.MIMX9352" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="11.0.1" full_name="FreeRTOS cm33 secure port" category="RTOS/cm33_secure_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
          <device_core_dependency value="cm33_MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMX9352xxxxM" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_non_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="asm_include" device_cores="cm33_MIMX9352xxxxM" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="asm_include" device_cores="cm33_MIMX9352xxxxM" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.secure.MIMX9352" name="cm33 secure port" brief="FreeRTOS Secure Context" version="11.0.1" full_name="FreeRTOS Secure Context" category="RTOS/cm33 secure port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <device_dependency value="MIMX9352xxxxM"/>
          <device_core_dependency value="cm33_MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="src" device_cores="cm33_MIMX9352xxxxM" fpu="true">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="asm_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMX9352" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMX9352" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMX9352" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMX9352" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMX9352" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMX9352" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMX9352" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MIMX9352" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.config.MIMX9352" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="true" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM33_3_priority_bits" config="true" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true">
        <files mask="FreeRTOSConfig_Gen.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="c_include" device_cores="cm33_MIMX9352xxxxM" fpu="true"/>
        <include_path relative_path="template" type="asm_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="asm_include" device_cores="cm33_MIMX9352xxxxM" fpu="true"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MIMX9352" name="lpuart_freertos" brief="LPUART Freertos Driver" version="2.5.0" full_name="LPUART Freertos Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart_freertos.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.MIMX9352" name="lpspi_freertos" brief="LPSPI FreeRTOS Driver" version="2.3.1" full_name="LPSPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi_freertos.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MIMX9352" name="i2c_freertos" brief="LPI2C FreeRTOS Driver" version="2.3.2" full_name="LPI2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c_freertos.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog32.MIMX9352" name="wdog" brief="WDOG32 Driver" version="2.1.0" full_name="WDOG32 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog32.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog32.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wdog32.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tstmr.MIMX9352" name="tstmr" brief="TSTMR Driver" version="2.0.2" full_name="TSTMR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tstmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tstmr.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trgmux.MIMX9352" name="trgmux" brief="TRGMUX Driver" version="2.0.1" full_name="TRGMUX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trgmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trgmux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_trgmux.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trdc1.MIMX9352" name="trdc" brief="TRDC Driver" version="2.2.1" full_name="TRDC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trdc.h"/>
        <files mask="fsl_trdc_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_trdc_1.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tpm.MIMX9352" name="tpm" brief="TPM Driver" version="2.3.2" full_name="TPM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tpm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tpm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tpm.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tmu_3.MIMX9352" name="tmu" brief="TMU Driver" version="2.1.0" full_name="TMU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tmu.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tmu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tmu_3.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMX9352" name="sema42" brief="SEMA42 Driver" version="2.0.4" full_name="SEMA42 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sema42.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMX9352" name="sai" brief="SAI Driver" version="2.4.4" full_name="SAI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sai.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rgpio.MIMX9352" name="gpio" brief="RGPIO Driver" version="2.1.0" full_name="RGPIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rgpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rgpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rgpio.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pxp.MIMX9352" name="pxp" brief="PXP Driver" version="2.6.1" full_name="PXP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pxp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pxp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pxp.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm.MIMX9352" name="pdm" brief="PDM Driver" version="2.9.1" full_name="PDM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pdm.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu1.MIMX9352" name="mu" brief="MU Driver" version="2.7.0" full_name="MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mu1.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi_imx.MIMX9352" name="mipi_dsi" brief="MIPI DSI Driver" version="2.0.1" full_name="MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mipi_dsi_imx.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MIMX9352" name="lpuart" brief="LPUART Driver" version="2.8.2" full_name="LPUART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMX9352" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="1.0.0" full_name="LPUART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX9352/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMX9352"/>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <component_dependency value="device.RTE.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpuart.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.MIMX9352" name="lptmr" brief="LPTMR Driver" version="2.2.0" full_name="LPTMR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lptmr.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.MIMX9352" name="lpspi" brief="LPSPI Driver" version="2.6.9" full_name="LPSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMX9352" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="1.0.0" full_name="LPSPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX9352/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMX9352"/>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
          <component_dependency value="device.RTE.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpspi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpit.MIMX9352" name="lpit" brief="LPIT Driver" version="2.1.1" full_name="LPIT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpit.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpit.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.MIMX9352" name="i2c" brief="LPI2C Driver" version="2.5.5" full_name="LPI2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMX9352" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="1.0.0" full_name="LPI2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX9352/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMX9352"/>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="device.RTE.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpi2c.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdifv3.MIMX9352" name="lcdifv3" brief="LCDIFV3 Driver" version="2.0.0" full_name="LCDIFV3 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdifv3.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdifv3.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lcdifv3.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMX9352" name="i3c" brief="I3C Driver" version="2.13.0" full_name="I3C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c_edma.MIMX9352" name="i3c_edma" brief="I3C EDMA Driver" version="2.2.9" full_name="I3C EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <component_dependency value="platform.drivers.i3c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMX9352" name="flexspi" brief="FLEXSPI Driver" version="2.6.2" full_name="FLEXSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMX9352" name="flexio_uart" brief="FLEXIO UART Driver" version="2.5.0" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMX9352" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <component_dependency value="platform.drivers.flexio_uart.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMX9352" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.4" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMX9352" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.3.0" full_name="FLEXIO SPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <component_dependency value="platform.drivers.flexio_spi.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMX9352" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.1.0" full_name="FLEXIO MCULCD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMX9352" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.5" full_name="FLEXIO MCULCD EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMX9352" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMX9352" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.8" full_name="FLEXIO I2S EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMX9352"/>
          <component_dependency value="platform.drivers.flexio_i2s.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMX9352" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2c_master.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMX9352" name="flexio" brief="FLEXIO Driver" version="2.2.3" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera.MIMX9352" name="flexio_camera" brief="FLEXIO Driver" version="2.1.3" full_name="FLEXIO CAMERA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_camera.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan.MIMX9352" name="flexcan" brief="FLEXCAN Driver" version="2.13.0" full_name="FLEXCAN Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcan.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet_cmsis.MIMX9352" name="enet_cmsis" brief="ENET CMSIS Driver" version="1.0.0" full_name="ENET CMSIS Driver" category="CMSIS Driver/Ethernet" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX9352/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.Ethernet.MIMX9352"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet_MAC.MIMX9352"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet_PHY.MIMX9352"/>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <component_dependency value="device.RTE.MIMX9352"/>
          <component_dependency value="platform.drivers.enet.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_cmsis.h"/>
        <files mask="fsl_enet_phy_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_cmsis.c"/>
        <files mask="fsl_enet_phy_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_enet.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_xcache.MIMX9352" name="cache_xcache" brief="CACHE XCACHE Driver" version="2.0.2" full_name="CACHE XCACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMX9352/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cache_xcache.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.voice_spot.model.MIMX9352" name="voice_spot model" brief="Voice Spot Hey NXP model" version="0.24.1" full_name="middleware voice_spot model" category="Voice/VoiceSpot library" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_spot" project_base_path="voice_spot">
      <dependencies>
        <all>
          <component_dependency value="middleware.voice_spot.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="models/NXP/version_1" type="c_include">
        <files mask="HeyNXP_en-US_1.h"/>
        <files mask="HeyNXP_en-US_1_params.h"/>
      </source>
      <source relative_path="models/NXP/version_1" type="binary">
        <files mask="HeyNXP_en-US_1.bin"/>
        <files mask="HeyNXP_en-US_1_params.bin"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_voice_spot_model.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="models/NXP/version_1" type="c_include"/>
        <include_path relative_path="models/NXP/version_1" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.voice_spot.cm33.MIMX9352" name="voice_spot" brief="Voice Spot library for Cortex M33" version="0.24.1" full_name="middleware voice_spot cm33" category="Voice/VoiceSpot library" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_spot" project_base_path="voice_spot">
      <dependencies>
        <all>
          <component_dependency value="middleware.voice_spot.model.MIMX9352"/>
          <board_dependency value="mcimx93evk"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="ARM_CortexM33/lib/include/public" type="c_include">
        <files mask="rdsp_model.h"/>
        <files mask="rdsp_model_defines.h"/>
        <files mask="rdsp_voicespot.h"/>
        <files mask="rdsp_voicespot_defines.h"/>
        <files mask="rdsp_voicespot_sleep_cbuffer.h"/>
        <files mask="rdsp_voicespot_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="ARM_CortexM33/rdsp_utilities_public/include" type="c_include">
        <files mask="RdspDeviceConfig.h"/>
        <files mask="RdspPlatforms.h"/>
        <files mask="RdspTypes.h"/>
      </source>
      <source toolchain="armgcc" relative_path="ARM_CortexM33/lib" type="lib">
        <files mask="libvoicespot.a"/>
      </source>
      <source exclude="true" relative_path="Doc" type="doc">
        <files mask="VSAPIDUG.pdf" hidden="true"/>
      </source>
      <source relative_path="Doc" type="doc">
        <files mask="VSAPIDUG.pdf"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_voice_spot_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ARM_CortexM33/lib/include" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="ARM_CortexM33/rdsp_utilities_public/include" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="ARM_CortexM33/lib/include" toolchain="armgcc" type="asm_include"/>
        <include_path relative_path="ARM_CortexM33/rdsp_utilities_public/include" toolchain="armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.voice_seeker.cm33.MIMX9352" name="voice_seeker" brief="Voice seeker library for Cortex M33" version="0.6.9" full_name="middleware voice_seeker cm33" category="Voice/Voice Control AFE" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_seeker/ARM_CortexM33" project_base_path="voice_seeker">
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.voice_seeker.rdsp_utilities_public.cm33.MIMX9352"/>
          <board_dependency value="mcimx93evk"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="COPYING-BSD-3.txt"/>
        <files mask="LICENSE.txt"/>
        <files mask="SCR-ARM_CortexM33-v0.6.9.txt"/>
        <files mask="SCR-ARM_CortexM33_Voiceseeker-v0.6.9.txt"/>
        <files mask="SCR-ARM_CortexM33_Voiceseeker_no_aec-v0.6.9.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="include" type="c_include">
        <files mask="RdspCycleCounter.h"/>
        <files mask="RdspStatusCodes.h"/>
        <files mask="libVoiceSeekerLight.h"/>
      </source>
      <source toolchain="armgcc" relative_path="lib" type="lib">
        <files mask="libvoiceseeker_no_aec.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_voice_seeker_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="include" toolchain="armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.voice_seeker.rdsp_utilities_public.cm33.MIMX9352" name="voice_seeker memory utils" brief="Voice seeker memory utilities for Cortex M33" version="0.6.9" full_name="middleware voice_seeker memory utils cm33" category="Voice/Voice Control AFE" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_seeker/ARM_CortexM33/rdsp_utilities_public" project_base_path="voice_seeker/ARM_CortexM33/rdsp_utilities_public">
      <dependencies>
        <all>
          <board_dependency value="mcimx93evk"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="include" type="c_include">
        <files mask="RdspDeviceConfig.h"/>
        <files mask="RdspPlatforms.h"/>
        <files mask="RdspTypes.h"/>
      </source>
      <source toolchain="armgcc" relative_path="rdsp_memory_utils_public" type="c_include">
        <files mask="RdspMemoryUtilsPublic.h"/>
        <files mask="RdspStackCheck.h"/>
        <files mask="memcheck.h"/>
      </source>
      <source toolchain="armgcc" relative_path="rdsp_memory_utils_public" type="src">
        <files mask="RdspMemoryUtilsPublic.c"/>
        <files mask="memcheck.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_voice_seeker_rdsp_utilities_public_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="rdsp_memory_utils_public" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="include" toolchain="armgcc" type="asm_include"/>
        <include_path relative_path="rdsp_memory_utils_public" toolchain="armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.bm.MIMX9352" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="5.1.2" full_name="RPMsg-Lite baremetal environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.freertos.MIMX9352" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="5.1.2" full_name="RPMsg-Lite FreeRTOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.xos.MIMX9352" name="rpmsg_lite xos" brief="RPMsg-Lite XOS environment layer sources" version="5.1.2" full_name="RPMsg-Lite XOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_xos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_xos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.qnx.MIMX9352" name="rpmsg_lite qnx" brief="RPMsg-Lite QNX environment layer sources" version="5.1.2" full_name="RPMsg-Lite QNX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_qnx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_qnx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.threadx.MIMX9352" name="rpmsg_lite threadx" brief="RPMsg-Lite ThreadX environment layer sources" version="5.1.2" full_name="RPMsg-Lite ThreadX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_threadx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.zephyr.MIMX9352" name="rpmsg_lite zephyr" brief="RPMsg-Lite Zephyr environment sources" version="5.1.2" full_name="RPMsg-Lite Zephyr environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_zephyr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_zephyr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.MIMX9352" name="rpmsg_lite" brief="RPMsg-Lite" version="5.1.2" full_name="Remote Procedure Messaging Lite library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.rpmsg-lite.bm.MIMX9352"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.qnx.MIMX9352"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.threadx.MIMX9352"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.xos.MIMX9352"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.zephyr.MIMX9352"/>
          </any_of>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="llist.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_lite.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.ns.MIMX9352" name="rpmsg_lite" brief="RPMsg-Lite NS" version="5.1.2" full_name="Remote Procedure Messaging Lite NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_ns.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_ns.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_ns.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.queue.MIMX9352" name="rpmsg_lite" brief="RPMsg-Lite Queue" version="5.1.2" full_name="Remote Procedure Messaging Queue NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_queue.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.imx93_m33.MIMX9352" name="rpmsg_lite_imx93_m33" brief="RPMsg-Lite for i.MX93 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for i.MX93 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
          <device_core_dependency value="cm33_MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imx93_m33" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imx93_m33" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_imx93_m33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imx93_m33" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imx93_m33" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.client.MIMX9352" name="eRPC_client" brief="eRPC_client" version="1.13.0" full_name="eRPC client" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.server.MIMX9352" name="eRPC_server" brief="eRPC_server" version="1.13.0" full_name="eRPC server" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.arbitrator.MIMX9352" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.13.0" full_name="eRPC arbitrator" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_arbitrated_client_manager.hpp"/>
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
        <files mask="erpc_transport_arbitrator.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_arbitrator.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_stdlib.MIMX9352" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.13.0" full_name="eRPC stdlib port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_stdlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_freertos.MIMX9352" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.13.0" full_name="eRPC FreeRTOS port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_threading.h"/>
        <files mask="erpc_setup_extensions.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
        <files mask="erpc_threading_freertos.cpp"/>
        <files mask="erpc_setup_extensions_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.MIMX9352" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.13.0" full_name="eRPC MU transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_mu_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_mu.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_mu_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_master.MIMX9352" name="eRPC_rpmsg_lite_transport_master" brief="eRPC_rpmsg_lite_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_remote.MIMX9352" name="eRPC_rpmsg_lite_transport_remote" brief="eRPC_rpmsg_lite_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_master.MIMX9352" name="eRPC_rpmsg_lite_rtos_transport_master" brief="eRPC_rpmsg_lite_rtos_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_remote.MIMX9352" name="eRPC_rpmsg_lite_rtos_transport_remote" brief="eRPC_rpmsg_lite_rtos_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.MIMX9352" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.13.0" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_tty_rtos_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.MIMX9352" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.13.0" full_name="eRPC UART CMSIS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_uart_cmsis_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_uart_cmsis.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_uart_cmsis_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.MIMX9352" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.13.0" full_name="eRPC DSPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.MIMX9352" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.13.0" full_name="eRPC DSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.MIMX9352" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.13.0" full_name="eRPC SPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.MIMX9352" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.13.0" full_name="eRPC SPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpspi_slave_transport.MIMX9352" name="eRPC_lpspi_slave_transport" brief="eRPC_lpspi_slave_transport" version="1.13.0" full_name="eRPC LPSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_i2c_slave_transport.MIMX9352" name="eRPC_i2c_slave_transport" brief="eRPC_i2c_slave_transport" version="1.13.0" full_name="eRPC I2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_i2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_i2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_i2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_i2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpi2c_slave_transport.MIMX9352" name="eRPC_lpi2c_slave_transport" brief="eRPC_lpi2c_slave_transport" version="1.13.0" full_name="eRPC LPI2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMX9352"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpi2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpi2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpi2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpi2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_common_multicore.MIMX9352" name="eRPC_common" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include">
        <files mask="erpc_error_handler.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="src">
        <files mask="erpc_error_handler.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_common_multicore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_client.MIMX9352" name="eRPC_examples Matrix Multiply Client" brief="erpc_examples Matrix Multiply Client" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_client.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_client.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_client.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_client.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_server.MIMX9352" name="eRPC_examples Matrix Multiply Server" brief="erpc_examples Matrix Multiply Server" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_server.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_server.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_server.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core0.MIMX9352" name="eRPC_examples Two Way RPC core0" brief="erpc_examples Two Way RPC core0" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core0.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core1.MIMX9352" name="eRPC_examples Two Way RPC core1" brief="erpc_examples Two Way RPC core1" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.MIMX9352" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.1" revision="2" full_name="lwIP" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.lwip.enet_ethernetif.MIMX9352"/>
            <component_dependency value="middleware.lwip.kinetis_ethernetif.MIMX9352"/>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMX9352"/>
            <component_dependency value="middleware.lwip.eoe_ethernetif.MIMX9352"/>
          </any_of>
          <component_dependency value="middleware.lwip.template.MIMX9352"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="BUILDING" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists_upstream.txt" hidden="true"/>
        <files mask="codespell_changed_files.sh" hidden="true"/>
        <files mask="codespell_check.sh" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="port" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="FILES" hidden="true"/>
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
        <files mask="ZeroCopyRx.c" hidden="true"/>
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen" type="doc">
        <files mask="generate.bat" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="main_page.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="acd.c"/>
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="acd.h"/>
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="mem_priv.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="tcp_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="acd.h"/>
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="ecp.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c"/>
        <files mask="des.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="sha1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
        <include_path relative_path="src/include/lwip" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/include" type="asm_include"/>
        <include_path relative_path="src/include/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMX9352" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMX9352" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon Implementation Support Files" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/http" type="other">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs" type="other">
        <files mask="404.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
        <files mask="makefsdata.c" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/apps/http" type="asm_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMX9352" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTP Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpsrv.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
        <include_path relative_path="src/apps/httpsrv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMX9352" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.1" revision="2" full_name="lwIP IPERF" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="SO_REUSE" value="1"/>
        <define name="PRINTF_FLOAT_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_lwiperf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMX9352" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.1" revision="2" full_name="lwIP mDNS" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
        <files mask="mdns.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mdns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMX9352" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.1" revision="2" full_name="lwIP MQTT Client" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMX9352" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.1" revision="2" full_name="lwIP SNTP" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_sntp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMX9352" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.1" revision="2" full_name="lwIP Ping Sender" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_ping.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
        <include_path relative_path="contrib/apps/ping" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMX9352" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMX9352" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMX9352" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMX9352" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMX9352" name="Empty ethernet interface" brief="Empty ethernet interface" version="2.2.1" revision="2" full_name="Empty ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="README"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_empty_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.enet_ethernetif.MIMX9352" name="Enet ethernet interface" brief="Enet ethernet interface" version="2.2.1" revision="2" full_name="Enet ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="LWIP_DISABLE_PBUF_POOL_SIZE_SANITY_CHECKS" value="1"/>
        <define name="LWIP_SUPPORT_CUSTOM_PBUF" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP6" value="1"/>
        <define name="CHECKSUM_CHECK_IP" value="1"/>
        <define name="CHECKSUM_CHECK_UDP" value="1"/>
        <define name="CHECKSUM_CHECK_TCP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP6" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="middleware.lwip.template.MIMX9352"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMX9352"/>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <component_dependency value="component.rgpio_adapter.MIMX9352"/>
          <component_dependency value="platform.drivers.enet_qos.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="enet_ethernetif.c"/>
        <files mask="ethernetif.c"/>
        <files mask="ethernetif_mmac.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="ethernetif.h"/>
        <files mask="ethernetif_mmac.h"/>
        <files mask="ethernetif_priv.h"/>
        <files mask="enet_configchecks.h"/>
      </source>
      <source condition="platform.drivers.enet_qos.MIMX9352" relative_path="port" type="src">
        <files mask="enet_ethernetif_qos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_enet_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.eoe_ethernetif.MIMX9352" name="EtherCAT EOE ethernet interface" brief="EtherCAT EOE ethernet interface" version="2.2.1" revision="2" full_name="EtherCAT EOE ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="CHECKSUM_GEN_IP" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="middleware.lwip.template.MIMX9352"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="eoe_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="eoe_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_eoe_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.kinetis_ethernetif.MIMX9352" name="Kinetis enet ethernet interface" brief="Kinetis ethernet interface" version="2.2.1" revision="2" full_name="Kinetis ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="LWIP_DISABLE_PBUF_POOL_SIZE_SANITY_CHECKS" value="1"/>
        <define name="LWIP_SUPPORT_CUSTOM_PBUF" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP6" value="1"/>
        <define name="CHECKSUM_CHECK_UDP" value="1"/>
        <define name="CHECKSUM_CHECK_TCP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP6" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <component_dependency value="platform.drivers.enet.MIMX9352"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMX9352"/>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <component_dependency value="component.rgpio_adapter.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="enet_ethernetif.c"/>
        <files mask="ethernetif.c"/>
        <files mask="ethernetif_mmac.c"/>
        <files mask="enet_ethernetif_kinetis.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="ethernetif.h"/>
        <files mask="ethernetif_mmac.h"/>
        <files mask="ethernetif_priv.h"/>
        <files mask="kinetis_configchecks.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_kinetis_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.dynamic.MIMX9352" name="Sys Arch Dynamic interface" brief="lwIP System Abstraction Layer using either FreeRTOS dynamic memory allocation APIs or bare-metal" version="2.2.1" revision="2" full_name="Sys Arch Dynamic interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/dynamic/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/dynamic" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_dynamic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/dynamic" type="c_include"/>
        <include_path relative_path="port/sys_arch/dynamic" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMX9352" name="lwIP_template" brief="lwIP Template" version="2.2.1" revision="2" full_name="lwIP Template Application" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.llhttp.MIMX9352" name="llhttp" brief="HTTP parser in LLVM IR" version="6.0.5" full_name="llhttp" category="AWS IoT/llhttp" user_visible="true" type="middleware" package_base_path="middleware/llhttp" project_base_path="llhttp">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="llhttp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="api.c"/>
        <files mask="http.c"/>
        <files mask="llhttp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_llhttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.MIMX9352" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.7" full_name="FreeMASTER communication driver common code" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.fmstr.platform_56f800e.MIMX9352"/>
            <component_dependency value="middleware.fmstr.platform_gen32le.MIMX9352"/>
            <component_dependency value="middleware.fmstr.platform_pa32.MIMX9352"/>
            <component_dependency value="middleware.fmstr.platform_s12z.MIMX9352"/>
            <component_dependency value="middleware.fmstr.platform_s32.MIMX9352"/>
          </any_of>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MIMX9352" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for 32bit platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="src">
        <files mask="freemaster_net_segger_rtt.c"/>
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="c_include">
        <files mask="freemaster_net_segger_rtt.h"/>
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <source relative_path="src/template/gen32le" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_gen32le.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.MIMX9352" name="FreeMASTER DSC driver" brief="FreeMASTER driver code for DSC platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for DSC platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan_dsc.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan_dsc.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/template/56f800e" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_56f800e.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/56f800e" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.fmstr.all_files.MIMX9352" name="FreeMASTER driver all files" version="3.0.7" package_base_path="middleware/freemaster" project_base_path="freemaster">
  <source relative_path="src/common" type="c_include">
    <files mask="freemaster.h"/>
    <files mask="freemaster_can.h"/>
    <files mask="freemaster_defcfg.h"/>
    <files mask="freemaster_net.h"/>
    <files mask="freemaster_private.h"/>
    <files mask="freemaster_protocol.h"/>
    <files mask="freemaster_rec.h"/>
    <files mask="freemaster_serial.h"/>
    <files mask="freemaster_tsa.h"/>
    <files mask="freemaster_ures.h"/>
    <files mask="freemaster_utils.h"/>
  </source>
  <source relative_path="src/common" type="src">
    <files mask="freemaster_appcmd.c"/>
    <files mask="freemaster_can.c"/>
    <files mask="freemaster_net.c"/>
    <files mask="freemaster_pdbdm.c"/>
    <files mask="freemaster_pipes.c"/>
    <files mask="freemaster_protocol.c"/>
    <files mask="freemaster_rec.c"/>
    <files mask="freemaster_scope.c"/>
    <files mask="freemaster_serial.c"/>
    <files mask="freemaster_sha.c"/>
    <files mask="freemaster_tsa.c"/>
    <files mask="freemaster_ures.c"/>
    <files mask="freemaster_utils.c"/>
  </source>
  <source relative_path="src/common" type="other">
    <files mask="freemaster_cfg.h.example"/>
  </source>
  <source relative_path="src/platforms/56f800e" type="c_include">
    <files mask="freemaster_56f800e.h"/>
  </source>
  <source relative_path="src/platforms/gen32be" type="c_include">
    <files mask="freemaster_gen32be.h"/>
  </source>
  <source relative_path="src/platforms/gen32le" type="c_include">
    <files mask="freemaster_gen32le.h"/>
  </source>
  <source relative_path="src/platforms/s12z" type="c_include">
    <files mask="freemaster_s12z.h"/>
  </source>
  <source relative_path="src/drivers" type="doc">
    <files mask="readme.txt"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_56f800e_flexcan.c"/>
    <files mask="freemaster_56f800e_qsci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_56f800e_flexcan.h"/>
    <files mask="freemaster_56f800e_qsci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="src">
    <files mask="freemaster_kxx_uart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="c_include">
    <files mask="freemaster_kxx_uart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="src">
    <files mask="freemaster_mpc574xp_linflex.c"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="c_include">
    <files mask="freemaster_mpc574xp_linflex.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="src">
    <files mask="freemaster_s12z_mscan.c"/>
    <files mask="freemaster_s12z_sci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="c_include">
    <files mask="freemaster_s12z_mscan.h"/>
    <files mask="freemaster_s12z_sci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="src">
    <files mask="freemaster_s32g274a_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="c_include">
    <files mask="freemaster_s32g274a_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="src">
    <files mask="freemaster_s32k144_lpuart.c"/>
    <files mask="freemaster_s32k3xx_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="c_include">
    <files mask="freemaster_s32k144_lpuart.h"/>
    <files mask="freemaster_s32k3xx_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="src">
    <files mask="freemaster_s32r45_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="c_include">
    <files mask="freemaster_s32r45_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="src">
    <files mask="freemaster_s32s247tv_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="c_include">
    <files mask="freemaster_s32s247tv_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="src">
    <files mask="freemaster_flexcan.c"/>
    <files mask="freemaster_flexcan_dsc.c"/>
    <files mask="freemaster_mcan.c"/>
    <files mask="freemaster_mscan.c"/>
    <files mask="freemaster_mscan_dsc.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
    <files mask="freemaster_flexcan.h"/>
    <files mask="freemaster_flexcan_dsc.h"/>
    <files mask="freemaster_mcan.h"/>
    <files mask="freemaster_mscan.h"/>
    <files mask="freemaster_mscan_dsc.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_serial_lpsci.c"/>
    <files mask="freemaster_serial_lpuart.c"/>
    <files mask="freemaster_serial_miniusart.c"/>
    <files mask="freemaster_serial_qsci.c"/>
    <files mask="freemaster_serial_uart.c"/>
    <files mask="freemaster_serial_usart.c"/>
    <files mask="freemaster_serial_usb.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_serial_lpsci.h"/>
    <files mask="freemaster_serial_lpuart.h"/>
    <files mask="freemaster_serial_miniusart.h"/>
    <files mask="freemaster_serial_qsci.h"/>
    <files mask="freemaster_serial_uart.h"/>
    <files mask="freemaster_serial_usart.h"/>
    <files mask="freemaster_serial_usb.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
    <files mask="freemaster_serial_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
    <files mask="freemaster_serial_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
    <files mask="freemaster_flexcan.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
    <files mask="freemaster_flexcan.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="src">
    <files mask="freemaster_usb.c"/>
    <files mask="freemaster_usb_device_descriptor.c"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="c_include">
    <files mask="freemaster_usb.h"/>
    <files mask="freemaster_usb_device_descriptor.h"/>
    <files mask="usb_device_descriptor.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="doc">
    <files mask="readme.txt"/>
  </source>
</component>-->
    <component id="middleware.fmstr.platform_s32.MIMX9352" name="FreeMASTER S32 driver" brief="FreeMASTER driver code for S32 platform." version="3.0.7" full_name="FreeMASTER communication driver for S32 platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_pa32.MIMX9352" name="FreeMASTER Power Architecture driver" brief="FreeMASTER driver code for Power Architecture 32bit platform." version="3.0.7" full_name="FreeMASTER communication driver for Power Architecture 32bit platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_pa32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_s12z.MIMX9352" name="FreeMASTER S12Z driver" brief="FreeMASTER driver code for S12Z platform." version="3.0.7" full_name="FreeMASTER communication driver for S12Z platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s12z.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-common.MIMX9352" name="camera-common" brief="Driver camera-common" version="1.0.0" full_name="Driver camera-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-common.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ap1302.MIMX9352" name="camera-device-ap1302" brief="Driver camera-device-ap1302" version="1.0.1" full_name="Driver camera-device-ap1302" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ap1302" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMX9352"/>
          <component_dependency value="driver.video-i2c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ap1302.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ap1302.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ap1302.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-common.MIMX9352" name="camera-device-common" brief="Driver camera-device-common" version="1.0.0" full_name="Driver camera-device-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/device" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-common.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-max9286.MIMX9352" name="camera-device-max9286" brief="Driver camera-device-max9286" version="1.0.2" full_name="Driver camera-device-max9286" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/max9286" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMX9352"/>
          <component_dependency value="driver.video-i2c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max9286.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max9286.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-max9286.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-mt9m114.MIMX9352" name="camera-device-mt9m114" brief="Driver camera-device-mt9m114" version="1.0.2" full_name="Driver camera-device-mt9m114" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/mt9m114" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMX9352"/>
          <component_dependency value="driver.video-i2c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mt9m114.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mt9m114.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-mt9m114.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov5640.MIMX9352" name="camera-device-ov5640" brief="Driver camera-device-ov5640" version="1.0.1" full_name="Driver camera-device-ov5640" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov5640" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMX9352"/>
          <component_dependency value="driver.camera-device-sccb.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov5640.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov5640.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov5640.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7670.MIMX9352" name="camera-device-ov7670" brief="Driver camera-device-ov7670" version="1.0.2" full_name="Driver camera-device-ov7670" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7670" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMX9352"/>
          <component_dependency value="driver.camera-device-sccb.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7670.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7670.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7670.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7725.MIMX9352" name="camera-device-ov7725" brief="Driver camera-device-ov7725" version="1.0.1" full_name="Driver camera-device-ov7725" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7725" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMX9352"/>
          <component_dependency value="driver.camera-device-sccb.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7725.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-sccb.MIMX9352" name="camera-device-sccb" brief="Driver camera-device-sccb" version="1.0.1" full_name="Driver camera-device-sccb" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/camera/device/sccb" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-sccb.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-common.MIMX9352" name="camera-receiver-common" brief="Driver camera-receiver-common" version="1.0.0" full_name="Driver camera-receiver-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-receiver-common.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi.MIMX9352" name="dbi" brief="Driver dbi" version="1.0.0" full_name="Driver dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_flexio_edma.MIMX9352" name="dbi_flexio_edma" brief="Driver dbi_flexio_edma" version="1.0.1" full_name="Driver dbi_flexio_edma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMX9352"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMX9352"/>
          <component_dependency value="platform.drivers.flexio_mculcd_edma.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_flexio_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_flexio_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi_flexio_edma.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MIMX9352" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-common.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dbi.MIMX9352" name="dc-fb-dbi" brief="Driver dc-fb-dbi" version="1.0.0" full_name="Driver dc-fb-dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dbi" project_base_path="video">
      <defines>
        <define name="MCUX_DBI_LEGACY" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="driver.dbi.MIMX9352"/>
          <component_dependency value="driver.dc-fb-common.MIMX9352"/>
          <component_dependency value="driver.display-common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-dbi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-lcdifv3.MIMX9352" name="dc-fb-lcdifv3" brief="Driver dc-fb-lcdifv3" version="1.0.2" full_name="Driver dc-fb-lcdifv3" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/lcdifv3" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="driver.dc-fb-common.MIMX9352"/>
          <component_dependency value="driver.display-common.MIMX9352"/>
          <component_dependency value="platform.drivers.lcdifv3.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_lcdifv3.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_lcdifv3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-lcdifv3.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-adv7535.MIMX9352" name="display-adv7535" brief="Driver display-adv7535" version="1.0.1" full_name="Driver display-adv7535" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/adv7535" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMX9352"/>
          <component_dependency value="driver.video-i2c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adv7535.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adv7535.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-adv7535.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-sn65dsi83.MIMX9352" name="display-sn65dsi83" brief="Driver display-sn65dsi83" version="1.0.0" full_name="Driver display-sn65dsi83" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/sn65dsi83" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMX9352"/>
          <component_dependency value="driver.video-i2c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sn65dsi83.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sn65dsi83.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-sn65dsi83.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MIMX9352" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-common.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6161.MIMX9352" name="display-it6161" brief="Driver display-it6161" version="1.0.0" full_name="Driver display-it6161" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6161" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMX9352"/>
          <component_dependency value="driver.video-i2c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6161.h"/>
        <files mask="hdmi_tx.h"/>
        <files mask="mipi_rx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6161.c"/>
        <files mask="hdmi_tx.c"/>
        <files mask="mipi_rx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-it6161.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6263.MIMX9352" name="display-it6263" brief="Driver display-it6263" version="1.0.1" full_name="Driver display-it6263" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6263" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMX9352"/>
          <component_dependency value="driver.video-i2c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6263.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6263.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-it6263.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fbdev.MIMX9352" name="fbdev" brief="Driver fbdev" version="1.0.4" full_name="Driver fbdev" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/fbdev" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fbdev.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fbdev.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fbdev.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MIMX9352" name="video-common" brief="Driver video-common" version="1.1.0" full_name="Driver video-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-common.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-i2c.MIMX9352" name="video-i2c" brief="Driver video-i2c" version="1.0.1" full_name="Driver video-i2c" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/i2c" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-i2c.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMX9352" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpuart_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMX9352" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.lpit_adapter.MIMX9352"/>
              <component_dependency value="platform.drivers.lpit.MIMX9352"/>
            </all>
            <all>
              <component_dependency value="component.lptmr_adapter.MIMX9352"/>
              <component_dependency value="platform.drivers.lptmr.MIMX9352"/>
            </all>
            <all>
              <component_dependency value="component.tpm_adapter.MIMX9352"/>
              <component_dependency value="platform.drivers.tpm.MIMX9352"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_timer_manager.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpit_adapter.MIMX9352" name="lpit_adapter" brief="Component lpit_adapter" version="1.0.0" full_name="Component lpit_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_LPIT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpit.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpit.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpit_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.MIMX9352" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_LPTMR" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lptmr.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lptmr_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tpm_adapter.MIMX9352" name="tpm_adapter" brief="Component tpm_adapter" version="1.0.0" full_name="Component tpm_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_TPM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.tpm.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_tpm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tpm_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.rpmsg_endpoint.MIMX9352" name="srtm rpmsg endpoint" brief="Driver srtm rpmsg endpoint" version="1.0.0" full_name="Driver srtm rpmsg endpoint" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <all>
          <component_dependency value="driver.srtm.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="../channels" type="c_include">
        <files mask="srtm_rpmsg_endpoint.h"/>
      </source>
      <source relative_path="../channels" type="src">
        <files mask="srtm_rpmsg_endpoint.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_rpmsg_endpoint.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../channels" type="c_include"/>
        <include_path relative_path="../channels" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_i2c_codec_adapter.MIMX9352" name="srtm i2c codec adapter" brief="Driver srtm i2c codec adapter" version="1.0.0" full_name="Driver srtm i2c codec adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <all>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.srtm_audio_service.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_i2c_codec_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_i2c_codec_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_i2c_codec_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_pdm_edma_adapter.MIMX9352" name="srtm pdm edma adapter" brief="Driver srtm pdm edma adapter" version="1.0.0" full_name="Driver srtm pdm edma adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <all>
          <component_dependency value="component.srtm_audio_service.MIMX9352"/>
          <component_dependency value="platform.drivers.pdm_edma.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_pdm_edma_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_pdm_edma_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_pdm_edma_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_sai_edma_adapter.MIMX9352" name="srtm sai edma adapter" brief="Driver srtm sai edma adapter" version="1.0.0" full_name="Driver srtm sai edma adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <all>
          <component_dependency value="component.srtm_audio_service.MIMX9352"/>
          <component_dependency value="platform.drivers.sai_edma.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_sai_edma_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_sai_edma_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_sai_edma_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_wm8524_adapter.MIMX9352" name="srtm wm8524 adapter" brief="Driver srtm wm8524 adapter" version="1.0.0" full_name="Driver srtm wm8524 adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <all>
          <component_dependency value="component.srtm_audio_service.MIMX9352"/>
          <component_dependency value="component.wm8524_adapter.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_wm8524_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_wm8524_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_wm8524_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_pf1550_adapter.MIMX9352" name="srtm pf1550 adapter" brief="Driver srtm sensor adapter" version="1.0.0" full_name="Driver srtm pf1550 adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <all>
          <component_dependency value="component.srtm_pmic_service.MIMX9352"/>
          <component_dependency value="driver.pf1550.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_pf1550_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_pf1550_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_pf1550_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_pwm_service.MIMX9352" name="srtm pwm service" brief="Driver srtm pwm service" version="1.0.0" full_name="Driver srtm pwm services" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <all>
          <component_dependency value="component.pwm_tpm_adapter.MIMX9352"/>
          <component_dependency value="component.srtm_pwm_adapter.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_pwm_service.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_pwm_service.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_pwm_service.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.srtm_pwm_adapter.MIMX9352" name="srtm pwm adapter" brief="Driver srtm pwm adapter" version="1.0.0" full_name="Driver srtm pwm adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm/services" project_base_path="srtm/services">
      <dependencies>
        <all>
          <component_dependency value="component.srtm_pwm_service.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="srtm_pwm_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="srtm_pwm_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_srtm_pwm_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.srtm.MIMX9352" name="srtm" brief="Driver srtm" version="1.1.0" full_name="Driver srtm" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/srtm" project_base_path="srtm">
      <dependencies>
        <all>
          <component_dependency value="component.rpmsg_endpoint.MIMX9352"/>
          <component_dependency value="driver.srtm.freertos.MIMX9352"/>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMX9352"/>
          <component_dependency value="middleware.multicore.rpmsg-lite.ns.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="srtm_channel.h"/>
        <files mask="srtm_defs.h"/>
        <files mask="srtm_dispatcher.h"/>
        <files mask="srtm_message.h"/>
        <files mask="srtm_peercore.h"/>
        <files mask="srtm_service.h"/>
      </source>
      <source relative_path="srtm" type="src">
        <files mask="srtm_channel.c"/>
        <files mask="srtm_dispatcher.c"/>
        <files mask="srtm_message.c"/>
        <files mask="srtm_peercore.c"/>
        <files mask="srtm_service.c"/>
      </source>
      <source relative_path="srtm" type="c_include">
        <files mask="srtm_channel_struct.h"/>
        <files mask="srtm_dispatcher_struct.h"/>
        <files mask="srtm_message_struct.h"/>
        <files mask="srtm_peercore_struct.h"/>
        <files mask="srtm_service_struct.h"/>
        <files mask="srtm_heap.h"/>
        <files mask="srtm_message_pool.h"/>
        <files mask="srtm_list.h"/>
        <files mask="srtm_mutex.h"/>
        <files mask="srtm_sem.h"/>
      </source>
      <source relative_path="port" type="src">
        <files mask="srtm_message_pool.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_srtm.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="srtm" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="srtm" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpspi_adapter.MIMX9352" name="lpspi_adapter" brief="Component lpspi_adapter" version="1.0.0" full_name="Component lpspi_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/spi" project_base_path="component/spi">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpspi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpspi_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id.MIMX9352" name="silicon_id" brief="Driver silicon_id" version="2.0.1" full_name="Driver silicon_id" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id" project_base_path="component/silicon_id">
      <dependencies>
        <all>
          <component_dependency value="component.silicon_id_imx93.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_silicon_id.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMX9352" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMX9352/utilities/shell" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <component_dependency value="utility.str.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_shell.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMX9352" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_spi.MIMX9352"/>
            <component_dependency value="component.serial_manager_swo.MIMX9352"/>
            <component_dependency value="component.serial_manager_uart.MIMX9352"/>
            <component_dependency value="component.serial_manager_virtual.MIMX9352"/>
          </any_of>
          <component_dependency value="component.lists.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_spi.MIMX9352" name="serial_manager_spi" brief="Component serial_manager_spi" version="1.0.0" full_name="Serial Manager spi" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SPI" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_MASTER" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_SLAVE" value="1"/>
        <define name="SERIAL_MANAGER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpspi_adapter.MIMX9352"/>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_spi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_spi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxas21002cq.MIMX9352" name="fxas21002cq" brief="Driver fxas21002cq" version="1.0.0" full_name="Driver fxas21002cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxas21002cq" project_base_path="gyroscope">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxas.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxas21002cq.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MIMX9352" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxls8974cf.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMX9352" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxos8700cq" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxos8700cq.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.htu21d.MIMX9352" name="htu21d" brief="Driver htu21d" version="1.0.0" full_name="Driver htu21d" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/htu21d" project_base_path="htu">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_htu21d.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_htu21d.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_htu21d.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.icm42688p.MIMX9352" name="icm42688p" brief="Driver icm42688p" version="1.0.0" full_name="Driver icm42688p" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/icm42688p" project_base_path="icm42688p">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_icm42688p.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_icm42688p.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_icm42688p.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.lsm6dso.MIMX9352" name="lsm6dso" brief="Driver lsm6dso" version="1.0.0" full_name="Driver lsm6dso" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/lsm6dso" project_base_path="tilt_pedo">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lsm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lsm6dso.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.max30101.MIMX9352" name="max30101" brief="Driver max30101" version="1.0.0" full_name="Driver max30101" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/max30101" project_base_path="heartrate">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_max30101.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8451q.MIMX9352" name="mma8451q" brief="Driver mma8451q" version="1.0.0" full_name="Driver mma8451q" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8451q" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8451q.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8652fc.MIMX9352" name="mma8652fc" brief="Driver mma8652fc" version="1.0.0" full_name="Driver mma8652fc" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8652fc" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8652fc.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.p3t1755.MIMX9352" name="p3t1755" brief="Driver p3t1755" version="2.0.0" full_name="Driver p3t1755" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/p3t1755" project_base_path="component/p3t1755">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_p3t1755.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_p3t1755.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_p3t1755.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tsl2561.MIMX9352" name="tsl2561" brief="Driver tsl2561" version="1.0.0" full_name="Driver tsl2561" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/tsl2561" project_base_path="tsl">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tsl2561.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tsl2561.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tsl2561.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_tpm_adapter.MIMX9352" name="pwm_tpm_adapter" brief="Component pwm_tpm_adapter" version="1.0.0" full_name="Component pwm_tpm_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.tpm.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_tpm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pwm_tpm_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf1550.MIMX9352" name="pf1550" brief="Driver pf1550" version="1.0.0" full_name="Driver pf1550" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf1550" project_base_path="component/pmic/pf1550">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf1550.c"/>
        <files mask="fsl_pf1550_charger.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf1550.h"/>
        <files mask="fsl_pf1550_charger.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf1550.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf3000.MIMX9352" name="pf3000" brief="Driver pf3000" version="1.0.0" full_name="Driver pf3000" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf3000" project_base_path="component/pmic/pf3000">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf3000.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf3000.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf3000.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf5020.MIMX9352" name="pf5020" brief="Driver pf5020" version="2.0.0" full_name="Driver pf5020" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf5020" project_base_path="component/pmic/pf5020">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf5020.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf5020.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf5020.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.eth_phy_common.MIMX9352" name="phy-common" brief="Driver phy-common" version="2.0.0" full_name="Driver phy-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/phy" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_eth_phy_common.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyaqr113c.MIMX9352" name="phy-device-aqr113c" brief="Driver phy-device-aqr113c" version="2.0.0" full_name="Driver phy-device-aqr113c" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyaqr113c" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyaqr113c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyaqr113c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyaqr113c.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyar8031.MIMX9352" name="phy-device-ar8031" brief="Driver phy-device-ar8031" version="2.0.0" full_name="Driver phy-device-ar8031" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyar8031" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyar8031.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyar8031.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyar8031.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phydp83848.MIMX9352" name="phy-device-dp83848" brief="Driver phy-device-dp83848" version="2.0.0" full_name="Driver phy-device-dp83848" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phydp83848" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phydp83848.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phydp83848.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phydp83848.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyksz8041.MIMX9352" name="phy-device-ksz8041" brief="Driver phy-device-ksz8041" version="2.0.0" full_name="Driver phy-device-ksz8041" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyksz8041" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyksz8041.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyksz8041.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyksz8041.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyksz8081.MIMX9352" name="phy-device-ksz8081" brief="Driver phy-device-ksz8081" version="2.0.0" full_name="Driver phy-device-ksz8081" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyksz8081" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyksz8081.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyksz8081.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyksz8081.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phylan8720a.MIMX9352" name="phy-device-lan8720a" brief="Driver phy-device-lan8720a" version="2.0.0" full_name="Driver phy-device-lan8720a" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phylan8720a" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phylan8720a.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phylan8720a.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phylan8720a.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phylan8741.MIMX9352" name="phy-device-lan8741" brief="Driver phy-device-lan8741" version="2.0.0" full_name="Driver phy-device-lan8741" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phylan8741" project_base_path="phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phylan8741.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phylan8741.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phylan8741.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyrtl8201.MIMX9352" name="phy-device-rtl8201" brief="Driver phy-device-rtl8201" version="2.0.0" full_name="Driver phy-device-rtl8201" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyrtl8201" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8201.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8201.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyrtl8201.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyrtl8211f.MIMX9352" name="phy-device-rtl8211f" brief="Driver phy-device-rtl8211f" version="2.0.0" full_name="Driver phy-device-rtl8211f" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyrtl8211f" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8211f.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8211f.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyrtl8211f.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyvsc8541.MIMX9352" name="phy-device-vsc8541" brief="Driver phy-device-vsc8541" version="2.0.0" full_name="Driver phy-device-vsc8541" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyvsc8541" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyvsc8541.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyvsc8541.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyvsc8541.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMX9352" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
              </not>
              <component_dependency value="component.osa_bm.MIMX9352"/>
            </all>
            <all>
              <component_dependency value="component.osa_free_rtos.MIMX9352"/>
              <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
            </all>
          </any_of>
          <component_dependency value="component.osa_interface.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.osa_bm.MIMX9352" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="0"/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          </not>
          <component_dependency value="component.osa.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMX9352" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMX9352" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMX9352"/>
          <component_dependency value="component.osa_template_config.MIMX9352"/>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMX9352" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.mem_manager_freertos.MIMX9352"/>
              <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
            </all>
            <component_dependency value="component.mem_manager_legacy.MIMX9352"/>
            <component_dependency value="component.mem_manager_light.MIMX9352"/>
          </any_of>
          <component_dependency value="component.lists.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_legacy.MIMX9352" name="mem_manager_legacy" brief="Component mem_manager_legacy" version="1.0.0" full_name="Component mem_manager_legacy" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_legacy.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_freertos.MIMX9352" name="mem_manager_freertos" brief="Component mem_manager_freertos" version="1.0.0" full_name="Component mem_manager_freertos" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMX9352"/>
          <component_dependency value="middleware.freertos-kernel.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_freertos.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMX9352" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_light.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMX9352" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lists.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus.MIMX9352" name="i3c_bus" brief="Component i3c_bus" version="1.0.1" full_name="Component i3c_bus" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus_adapter.MIMX9352" name="i3c_bus_adapter" brief="Component i3c_bus_adapter" version="1.1.0" full_name="Component i3c_bus_adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="component.i3c_bus.MIMX9352"/>
          <component_dependency value="platform.drivers.i3c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_adapter.MIMX9352" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <defines>
        <define name="SDK_I3C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMX9352"/>
          <component_dependency value="platform.drivers.i3c.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.lpi2c_adapter.MIMX9352" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
          <component_dependency value="component.i2c_adapter_interface.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpi2c_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.i2c_adapter_interface.MIMX9352" name="i2c_adapter_interface" brief="Component i2c_adapter_interface" version="1.0.0" full_name="Component i2c_adapter_interface" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.lpi2c.MIMX9352"/>
              <component_dependency value="component.lpi2c_adapter.MIMX9352"/>
            </all>
            <all>
              <component_dependency value="component.i3c_adapter.MIMX9352"/>
              <component_dependency value="platform.drivers.i3c.MIMX9352"/>
            </all>
          </any_of>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i2c_adapter_interface.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.rgpio_adapter.MIMX9352" name="rgpio_adapter" brief="Component rgpio_adapter" version="1.0.1" full_name="Component rgpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.rgpio.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rgpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_rgpio_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nand_flexspi.MIMX9352" name="flash_nand_flexspi" brief="Component.flash_nand_flexspi" version="1.0.0" full_name="Component flash_nand_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="nand" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <source relative_path="nand/flexspi" type="src">
        <files mask="fsl_flexspi_nand_flash.c"/>
      </source>
      <source relative_path="nand/flexspi" type="c_include">
        <files mask="fsl_flexspi_nand_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nand_flexspi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nand" type="c_include"/>
        <include_path relative_path="nand/flexspi" type="c_include"/>
        <include_path relative_path="nand" type="asm_include"/>
        <include_path relative_path="nand/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_flexspi.MIMX9352" name="flash_nor_flexspi" brief="Component flash_nor_flexspi" version="1.0.0" full_name="Component flash_nor_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/flexspi" type="src">
        <files mask="fsl_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="nor/flexspi" type="c_include">
        <files mask="fsl_flexspi_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nor_flexspi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/flexspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_lpspi.MIMX9352" name="flash_nor_lpspi" brief="Component flash_nor_lpspi" version="1.0.0" full_name="Component flash_nor_lpspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/lpspi" type="src">
        <files mask="fsl_lpspi_nor_flash.c"/>
        <files mask="fsl_lpspi_mem_adapter.c"/>
      </source>
      <source relative_path="nor/lpspi" type="c_include">
        <files mask="fsl_lpspi_nor_flash.h"/>
        <files mask="fsl_lpspi_mem_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nor_lpspi.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/lpspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/lpspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip.MIMX9352" name="mflash onchip" brief="mflash onchip" version="1.0.0" full_name="mflash onchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.cache_xcache.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_onchip.MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.mflash_offchip.MIMX9352" name="mflash offchip" brief="mflash offchip" version="1.0.0" full_name="mflash offchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_xcache.MIMX9352"/>
            <component_dependency value="platform.drivers.flexspi.MIMX9352"/>
          </any_of>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_offchip.MIMX9352.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.common_task.MIMX9352" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMX9352" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_i2c.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ak4497.MIMX9352" name="ak4497" brief="Driver ak4497" version="2.1.2" full_name="Driver ak4497" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/ak4497" project_base_path="codec">
      <defines>
        <define name="CODEC_AK4497_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.ak4497_adapter.MIMX9352"/>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ak4497.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ak4497.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ak4497.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42448.MIMX9352" name="cs42448" brief="Driver cs42448" version="2.0.1" full_name="Driver cs42448" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42448" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42448_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.cs42448_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42448.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42448.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42448.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMX9352" name="cs42888" brief="Driver cs42888" version="2.1.3" full_name="Driver cs42888" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42888_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.cs42888_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42888.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMX9352" name="dialog7212" brief="Driver dialog7212" version="2.3.1" full_name="Driver dialog7212" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <defines>
        <define name="CODEC_DA7212_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.da7212_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dialog7212.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm186x.MIMX9352" name="pcm186x" brief="Driver pcm186x" version="2.0.1" full_name="Driver pcm186x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm186x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM186X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.pcm186x_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm186x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm186x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcm186x.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm512x.MIMX9352" name="pcm512x" brief="Driver pcm512x" version="2.0.1" full_name="Driver pcm512x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm512x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM512X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.pcm512x_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm512x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm512x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcm512x.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMX9352" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <defines>
        <define name="CODEC_SGTL5000_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.sgtl_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sgtl5000.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9896.MIMX9352" name="tfa9896" brief="Driver tfa9896" version="6.0.2" full_name="Driver tfa9896" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9896" project_base_path="codec">
      <defines>
        <define name="CODEC_TFA9896_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.tfa9896_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_buffer.h"/>
        <files mask="fsl_tfa9896.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hal_registers.c"/>
        <files mask="fsl_tfa9896.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="MIMXRT595595-EVK_TFA9896_SW.pdf"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9896.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx.MIMX9352" name="tfa9xxx" brief="Driver tfa9xxx" version="2.1.0" full_name="Driver tfa9xxx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <defines>
        <define name="CODEC_TFA9XXX_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.tfa9xxx_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_config_TFA9892N1.h"/>
        <files mask="tfa_config_TFA9894N1.h"/>
        <files mask="tfa_config_TFA9894N2.h"/>
        <files mask="fsl_tfa9xxx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tfa9xxx.c"/>
        <files mask="fsl_tfa9xxx_IMX.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="vas_tfa_drv" type="c_include">
        <files mask="config.h"/>
        <files mask="tfa2_container.h"/>
        <files mask="tfa2_dev.h"/>
        <files mask="tfa2_dsp_fw.h"/>
        <files mask="tfa2_haptic.h"/>
        <files mask="tfa9xxx_parameters.h"/>
        <files mask="tfa_haptic_fw_defs.h"/>
      </source>
      <source relative_path="vas_tfa_drv" type="src">
        <files mask="tfa2_container.c"/>
        <files mask="tfa2_dev.c"/>
        <files mask="tfa2_haptic.c"/>
        <files mask="tfa2_init.c"/>
        <files mask="tfa_container_crc32.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9xxx.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="vas_tfa_drv" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="vas_tfa_drv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx_hal.MIMX9352" name="tfa9xxx_hal" brief="Driver tfa9xxx_hal" version="2.1.0" full_name="Driver tfa9xxx_hal" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <component_dependency value="driver.tfa9xxx.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_device_hal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="tfa_device_hal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9xxx_hal.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8524.MIMX9352" name="wm8524" brief="Driver wm8524" version="2.1.1" full_name="Driver wm8524" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8524" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8524_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.wm8524_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8524.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMX9352" name="wm8904" brief="Driver wm8904" version="2.5.1" full_name="Driver wm8904" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8904_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.wm8904_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8904.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMX9352" name="wm8960" brief="Driver wm8960" version="2.2.4" full_name="Driver wm8960" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8960_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.wm8960_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8960.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMX9352" name="wm8962" brief="Driver wm8962" version="2.2.0" full_name="Driver wm8962" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8962" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8962_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMX9352"/>
          <component_dependency value="component.codec_i2c.MIMX9352"/>
          <component_dependency value="component.wm8962_adapter.MIMX9352"/>
          <component_dependency value="driver.codec.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8962.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.button.MIMX9352" name="button" brief="Component button" version="1.0.0" full_name="Component button" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="component.rgpio_adapter.MIMX9352"/>
          <component_dependency value="platform.drivers.rgpio.MIMX9352"/>
          <component_dependency value="component.timer_manager.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_button.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.audio_sai_edma_adapter.MIMX9352" name="sai_edma_adapter" brief="Component sai_edma_adapter" version="1.0.0" full_name="Component sai_edma_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/audio" project_base_path="component/audio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.sai_edma.MIMX9352"/>
          <device_dependency value="MIMX9352xxxxM"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_audio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_audio_sai_edma_adapter.MIMX9352.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
